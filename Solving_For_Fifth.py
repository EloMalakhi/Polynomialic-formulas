# x = s0 + s1*r**.2 + s2*r**.4 + s3*r**.6 + s4*r**.8
import sympy
import re

def categorize_extensive_term(lesser_degree: int, greater_degree: int, category_indicator: int, category_prfx: str, subject: sympy.core.add.Add, var:  sympy.core.symbol.Symbol, subject_name: str, var_name: str):
    category_indicator += 1
    modified_subject = sympy.expand(subject*(var**(-lesser_degree)))
    result = ""
    for i in range(lesser_degree, greater_degree + 1):
        category_indicator -= 1
        current = modified_subject.subs([(var, 0)])
        print(f"{category_prfx}{category_indicator} = {current}")
        modified_subject = sympy.expand((modified_subject - current)/var)

    for i in range(greater_degree - lesser_degree + 1):
        pow =  f"*{var_name}**{greater_degree - i}"
        if i ==  greater_degree:
            pow = ""
        elif i == greater_degree - 1:
            pow = f"*{var_name}"
        result += f"{category_prfx}{category_indicator + i}{pow} + "
    result = re.sub(" \+ $", "", result)
    print(f"{subject_name} = {result}")

s0, s1, s2, s3, s4, r, c0, c1, c2, c3, c4, qA, qB, qC, Rad1 = sympy.symbols("s0 s1 s2 s3 s4 r c0 c1 c2 c3 c4 qA qB qC Rad1")
C4 = -5*s0
C3 = -5*r*s1*s4 -5*r*s2*s3 + 10*s0**2
C2 = -5*r**2*s2*s4**2 -5*r**2*s3**2*s4 + 15*r*s0*s1*s4 + 15*r*s0*s2*s3 -5*r*s1**2*s3 -5*r*s1*s2**2 -10*s0**3
C1 = -5*r**3*s3*s4**3 + 10*r**2*s0*s2*s4**2 + 10*r**2*s0*s3**2*s4 + 5*r**2*s1**2*s4**2 - 5*r**2*s1*s2*s3*s4 - 5*r**2*s1*s3**3 - 5*r**2*s2**3*s4 + 5*r**2*s2**2*s3**2 - 15*r*s0**2*s1*s4 - 15*r*s0**2*s2*s3 + 10*r*s0*s1**2*s3 + 10*r*s0*s1*s2**2 - 5*r*s1**3*s2 + 5*s0**4
C0 = -r**4*s4**5 + 5*r**3*s0*s3*s4**3 + 5*r**3*s1*s2*s4**3 - 5*r**3*s1*s3**2*s4**2 - 5*r**3*s2**2*s3*s4**2 + 5*r**3*s2*s3**3*s4 - r**3*s3**5 - 5*r**2*s0**2*s2*s4**2 - 5*r**2*s0**2*s3**2*s4 - 5*r**2*s0*s1**2*s4**2 + 5*r**2*s0*s1*s2*s3*s4 + 5*r**2*s0*s1*s3**3 + 5*r**2*s0*s2**3*s4 - 5*r**2*s0*s2**2*s3**2 + 5*r**2*s1**3*s3*s4 - 5*r**2*s1**2*s2**2*s4 - 5*r**2*s1**2*s2*s3**2 + 5*r**2*s1*s2**3*s3 - r**2*s2**5 + 5*r*s0**3*s1*s4 + 5*r*s0**3*s2*s3 - 5*r*s0**2*s1**2*s3 - 5*r*s0**2*s1*s2**2 + 5*r*s0*s1**3*s2 - r*s1**5 - s0**5

# replacing s1 with 1
C4 = -5*s0
C3 = -5*r*s2*s3 - 5*r*s4 + 10*s0**2
C2 = -5*r**2*s2*s4**2 - 5*r**2*s3**2*s4 + 15*r*s0*s2*s3 + 15*r*s0*s4 - 5*r*s2**2 - 5*r*s3 - 10*s0**3
C1 = -5*r**3*s3*s4**3 + 10*r**2*s0*s2*s4**2 + 10*r**2*s0*s3**2*s4 - 5*r**2*s2**3*s4 + 5*r**2*s2**2*s3**2 - 5*r**2*s2*s3*s4 - 5*r**2*s3**3 + 5*r**2*s4**2 - 15*r*s0**2*s2*s3 - 15*r*s0**2*s4 + 10*r*s0*s2**2 + 10*r*s0*s3 - 5*r*s2 + 5*s0**4
C0 = -r**4*s4**5 + 5*r**3*s0*s3*s4**3 - 5*r**3*s2**2*s3*s4**2 + 5*r**3*s2*s3**3*s4 + 5*r**3*s2*s4**3 - r**3*s3**5 - 5*r**3*s3**2*s4**2 - 5*r**2*s0**2*s2*s4**2 - 5*r**2*s0**2*s3**2*s4 + 5*r**2*s0*s2**3*s4 - 5*r**2*s0*s2**2*s3**2 + 5*r**2*s0*s2*s3*s4 + 5*r**2*s0*s3**3 - 5*r**2*s0*s4**2 - r**2*s2**5 + 5*r**2*s2**3*s3 - 5*r**2*s2**2*s4 - 5*r**2*s2*s3**2 + 5*r**2*s3*s4 + 5*r*s0**3*s2*s3 + 5*r*s0**3*s4 - 5*r*s0**2*s2**2 - 5*r*s0**2*s3 + 5*r*s0*s2 - r - s0**5

S0 = -C4/5
S4 = 2*s0**2/r - s2*s3 - c3/(5*r)



# making categories of r out of C2, C1, and C0
C2 = -c3**2*s2/5 - 2*c3*r*s2**2*s3 + c3*r*s3**2 + 4*c3*s0**2*s2 - 3*c3*s0 - 5*r**2*s2**3*s3**2 + 5*r**2*s2*s3**3 + 20*r*s0**2*s2**2*s3 - 10*r*s0**2*s3**2 - 5*r*s2**2 - 5*r*s3 - 20*s0**4*s2 + 20*s0**3
C1 = c3**3*s3/25 + 3*c3**2*r*s2*s3**2/5 - 6*c3**2*s0**2*s3/5 + 2*c3**2*s0*s2/5 + c3**2/5 + 3*c3*r**2*s2**2*s3**3 - 12*c3*r*s0**2*s2*s3**2 + 4*c3*r*s0*s2**2*s3 - 2*c3*r*s0*s3**2 + c3*r*s2**3 + 3*c3*r*s2*s3 + 12*c3*s0**4*s3 - 8*c3*s0**3*s2 - c3*s0**2 + 5*r**3*s2**3*s3**4 - 30*r**2*s0**2*s2**2*s3**3 + 10*r**2*s0*s2**3*s3**2 - 10*r**2*s0*s2*s3**3 + 5*r**2*s2**4*s3 + 15*r**2*s2**2*s3**2 - 5*r**2*s3**3 + 60*r*s0**4*s2*s3**2 - 40*r*s0**3*s2**2*s3 + 20*r*s0**3*s3**2 - 10*r*s0**2*s2**3 - 30*r*s0**2*s2*s3 + 10*r*s0*s2**2 + 10*r*s0*s3 - 5*r*s2 - 40*s0**6*s3 + 40*s0**5*s2 - 5*s0**4
C0 = c3**5/(3125*r) + c3**4*s2*s3/125 - 2*c3**4*s0**2/(125*r) + 2*c3**3*r*s2**2*s3**2/25 - 8*c3**3*s0**2*s2*s3/25 - c3**3*s0*s3/25 - c3**3*s2/25 + 8*c3**3*s0**4/(25*r) + 2*c3**2*r**2*s2**3*s3**3/5 - 12*c3**2*r*s0**2*s2**2*s3**2/5 - 3*c3**2*r*s0*s2*s3**2/5 - 4*c3**2*r*s2**2*s3/5 - c3**2*r*s3**2/5 + 24*c3**2*s0**4*s2*s3/5 + 6*c3**2*s0**3*s3/5 + c3**2*s0**2*s2 - c3**2*s0/5 - 16*c3**2*s0**6/(5*r) + c3*r**3*s2**4*s3**4 - 8*c3*r**2*s0**2*s2**3*s3**3 - 3*c3*r**2*s0*s2**2*s3**3 - 5*c3*r**2*s2**3*s3**2 - 3*c3*r**2*s2*s3**3 + 24*c3*r*s0**4*s2**2*s3**2 + 12*c3*r*s0**3*s2*s3**2 + 14*c3*r*s0**2*s2**2*s3 + 5*c3*r*s0**2*s3**2 - c3*r*s0*s2**3 - 3*c3*r*s0*s2*s3 + c3*r*s2**2 - c3*r*s3 - 32*c3*s0**6*s2*s3 - 12*c3*s0**5*s3 - 8*c3*s0**4*s2 + 3*c3*s0**3 + 16*c3*s0**8/r + r**4*s2**5*s3**5 - 10*r**3*s0**2*s2**4*s3**4 - 5*r**3*s0*s2**3*s3**4 - 10*r**3*s2**4*s3**3 - 10*r**3*s2**2*s3**4 - r**3*s3**5 + 40*r**2*s0**4*s2**3*s3**3 + 30*r**2*s0**3*s2**2*s3**3 + 45*r**2*s0**2*s2**3*s3**2 + 35*r**2*s0**2*s2*s3**3 - 5*r**2*s0*s2**4*s3 - 15*r**2*s0*s2**2*s3**2 + 5*r**2*s0*s3**3 - r**2*s2**5 + 10*r**2*s2**3*s3 - 10*r**2*s2*s3**2 - 80*r*s0**6*s2**2*s3**2 - 60*r*s0**5*s2*s3**2 - 60*r*s0**4*s2**2*s3 - 30*r*s0**4*s3**2 + 10*r*s0**3*s2**3 + 30*r*s0**3*s2*s3 - 15*r*s0**2*s2**2 + 5*r*s0**2*s3 + 5*r*s0*s2 - r + 80*s0**8*s2*s3 + 40*s0**7*s3 + 20*s0**6*s2 - 11*s0**5 - 32*s0**10/r

m2 = -c3**2*s2/5 + 4*c3*s0**2*s2 - 3*c3*s0 - 20*s0**4*s2 + 20*s0**3
m1 = -2*c3*s2**2*s3 + c3*s3**2 + 20*s0**2*s2**2*s3 - 10*s0**2*s3**2 - 5*s2**2 - 5*s3
m0 = -5*s2**3*s3**2 + 5*s2*s3**3
C2 = m0*r**2 + m1*r + m2




# categorize_extensive_term(0, 2, 2, "m", C2, r, "C2", "r") produces
m2 = -c3**2*s2/5 + 4*c3*s0**2*s2 - 3*c3*s0 - 20*s0**4*s2 + 20*s0**3
m1 = -2*c3*s2**2*s3 + c3*s3**2 + 20*s0**2*s2**2*s3 - 10*s0**2*s3**2 - 5*s2**2 - 5*s3
m0 = -5*s2**3*s3**2 + 5*s2*s3**3
C2 = m0*r**2 + m1*r + m2

# categorize_extensive_term(0, 3, 6, "m", C1, r, "C1", "r") produces
m6 = c3**3*s3/25 - 6*c3**2*s0**2*s3/5 + 2*c3**2*s0*s2/5 + c3**2/5 + 12*c3*s0**4*s3 - 8*c3*s0**3*s2 - c3*s0**2 - 40*s0**6*s3 + 40*s0**5*s2 - 5*s0**4
m5 = 3*c3**2*s2*s3**2/5 - 12*c3*s0**2*s2*s3**2 + 4*c3*s0*s2**2*s3 - 2*c3*s0*s3**2 + c3*s2**3 + 3*c3*s2*s3 + 60*s0**4*s2*s3**2 - 40*s0**3*s2**2*s3 + 20*s0**3*s3**2 - 10*s0**2*s2**3 - 30*s0**2*s2*s3 + 10*s0*s2**2 + 10*s0*s3 - 5*s2
m4 = 3*c3*s2**2*s3**3 - 30*s0**2*s2**2*s3**3 + 10*s0*s2**3*s3**2 - 10*s0*s2*s3**3 + 5*s2**4*s3 + 15*s2**2*s3**2 - 5*s3**3
m3 = 5*s2**3*s3**4
C1 = m3*r**3 + m4*r**2 + m5*r + m6

# categorize_extensive_term(-1, 4, 12, "m", C0, r, "C0", "r") produces
m12 = c3**5/3125 - 2*c3**4*s0**2/125 + 8*c3**3*s0**4/25 - 16*c3**2*s0**6/5 + 16*c3*s0**8 - 32*s0**10
m11 = c3**4*s2*s3/125 - 8*c3**3*s0**2*s2*s3/25 - c3**3*s0*s3/25 - c3**3*s2/25 + 24*c3**2*s0**4*s2*s3/5 + 6*c3**2*s0**3*s3/5 + c3**2*s0**2*s2 - c3**2*s0/5 - 32*c3*s0**6*s2*s3 - 12*c3*s0**5*s3 - 8*c3*s0**4*s2 + 3*c3*s0**3 + 80*s0**8*s2*s3 + 40*s0**7*s3 + 20*s0**6*s2 - 11*s0**5
m10 = 2*c3**3*s2**2*s3**2/25 - 12*c3**2*s0**2*s2**2*s3**2/5 - 3*c3**2*s0*s2*s3**2/5 - 4*c3**2*s2**2*s3/5 - c3**2*s3**2/5 + 24*c3*s0**4*s2**2*s3**2 + 12*c3*s0**3*s2*s3**2 + 14*c3*s0**2*s2**2*s3 + 5*c3*s0**2*s3**2 - c3*s0*s2**3 - 3*c3*s0*s2*s3 + c3*s2**2 - c3*s3 - 80*s0**6*s2**2*s3**2 - 60*s0**5*s2*s3**2 - 60*s0**4*s2**2*s3 - 30*s0**4*s3**2 + 10*s0**3*s2**3 + 30*s0**3*s2*s3 - 15*s0**2*s2**2 + 5*s0**2*s3 + 5*s0*s2 - 1
m9 = 2*c3**2*s2**3*s3**3/5 - 8*c3*s0**2*s2**3*s3**3 - 3*c3*s0*s2**2*s3**3 - 5*c3*s2**3*s3**2 - 3*c3*s2*s3**3 + 40*s0**4*s2**3*s3**3 + 30*s0**3*s2**2*s3**3 + 45*s0**2*s2**3*s3**2 + 35*s0**2*s2*s3**3 - 5*s0*s2**4*s3 - 15*s0*s2**2*s3**2 + 5*s0*s3**3 - s2**5 + 10*s2**3*s3 - 10*s2*s3**2
m8 = c3*s2**4*s3**4 - 10*s0**2*s2**4*s3**4 - 5*s0*s2**3*s3**4 - 10*s2**4*s3**3 - 10*s2**2*s3**4 - s3**5
m7 = s2**5*s3**5
C0 = m7*r**4 + m8*r**3 + m9*r**2 + m10*r + m11 + m12/r



C2 = m0*r**2 + m1*r + m2
C1 = m3*r**3 + m4*r**2 + m5*r + m6
C0 = m7*r**4 + m8*r**3 + m9*r**2 + m10*r + m11 + m12/r


m13 = (m1*m1 - 4*(m2 - c2)*m0)**.5
R = (-m1 + m13)/(2*m0)


m0, m1, m2, m3, m4, m5, m6, m7,m8,m9,m10,m11,m12,m13 = sympy.symbols("m0 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11 m12 m13")


C1 = m13**2*(m4/(4*m0**2) - 3*m1*m3/(8*m0**3)) + m6 - m1*m5/(2*m0) + m1**2*m4/(4*m0**2)
+    m13*(m5/(2*m0) - m1*m4/(2*m0**2) + 3*m1**2*m3/(8*m0**3)) - m1**3*m3/(8*m0**3) + m13**3*m3/(8*m0**3)

C0 = -2*m1*m12/(-4*c2 + 4*m2) + m11 + m13**2*(m9/(4*m0**2) - 3*m1*m8/(8*m0**3) + 3*m1**2*m7/(8*m0**4)) - m1*m10/(2*m0) + m1**2*m9/(4*m0**2) - m1**3*m8/(8*m0**3) + m1**4*m7/(16*m0**4) + m13**4*m7/(16*m0**4)
+     m13**3*(m8/(8*m0**3) - m1*m7/(4*m0**4)) + m13*(-2*m12/(-4*c2 + 4*m2) + m10/(2*m0) - m1*m9/(2*m0**2) + 3*m1**2*m8/(8*m0**3) - m1**3*m7/(4*m0**4))


Zero1 = m13**2*(2*m0*m4 - 3*m1*m3) + 8*m0**3*m6 - 4*m0**2*m1*m5 + 2*m0*m1**2*m4 - 8*c1*m0**3 +             m13*(4*m0**2*m5 - 4*m0*m1*m4 + 3*m1**2*m3) - m1**3*m3 + m13**3*m3

Zero2 = -8*m0**4*m1*m12 + (16*m0**4*m11 + m13**2*(4*m0**2*m9 - 6*m0*m1*m8 + 6*m0*m1**2*m7) - 8*m0**3*m1*m10 + 4*m0**2*m1**2*m9 - 2*m0*m1**3*m8 + m1**4*m7 + m13**4*m7 - 16*m0**4*c0)*(m2 - c2) +             m13**3*(2*m0*m8 - 4*m1*m7)*(m2 - c2) + m13*(-8*m0**4*m12 + (8*m0**3*m10 - 8*m0**2*m1*m9 + 6*m0*m1**2*m8 - 4*m1**3*m7)*(m2 - c2))

# replacing m13**2 with what it represents

Zero1 = -8*c1*m0**3 + 8*m0**3*m6 - 4*m0**2*m1*m5 + 2*m0*m1**2*m4 - m1**3*m3 + m13**3*m3 + m13*(4*m0**2*m5 - 4*m0*m1*m4 + 3*m1**2*m3) + (2*m0*m4 - 3*m1*m3)*(-m0*(-4*c2 + 4*m2) + m1**2)

Zero2 = -8*m0**4*m1*m12 + m13*(-c2 + m2)*(2*m0*m8 - 4*m1*m7)*(-m0*(-4*c2 + 4*m2) + m1**2) + m13*(-8*m0**4*m12 + (-c2 + m2)*(8*m0**3*m10 - 8*m0**2*m1*m9 + 6*m0*m1**2*m8 - 4*m1**3*m7)) + (-c2 + m2)*(-16*c0*m0**4 + 16*m0**4*m11 - 8*m0**3*m1*m10 + 4*m0**2*m1**2*m9 - 2*m0*m1**3*m8 + m1**4*m7 + m7*(-m0*(-4*c2 + 4*m2) + m1**2)**2 + (-m0*(-4*c2 + 4*m2) + m1**2)*(4*m0**2*m9 + 6*m0*m1**2*m7 - 6*m0*m1*m8))

# expanding both of them

Zero1 = -8*c1*m0**3 + 8*c2*m0**2*m4 - 12*c2*m0*m1*m3 + 8*m0**3*m6 - 4*m0**2*m1*m5 + 4*m0**2*m13*m5 - 8*m0**2*m2*m4 + 4*m0*m1**2*m4 - 4*m0*m1*m13*m4 + 12*m0*m1*m2*m3 - 4*m1**3*m3 + 3*m1**2*m13*m3 + m13**3*m3

Zero2 = 16*c0*c2*m0**4 - 16*c0*m0**4*m2 - 16*c2**3*m0**2*m7 - 16*c2**2*m0**3*m9 - 24*c2**2*m0**2*m1**2*m7 + 24*c2**2*m0**2*m1*m8 - 8*c2**2*m0**2*m13*m8 + 48*c2**2*m0**2*m2*m7 - 8*c2**2*m0*m1**2*m7 + 16*c2**2*m0*m1*m13*m7 - 16*c2*m0**4*m11 + 8*c2*m0**3*m1*m10 - 8*c2*m0**3*m10*m13 + 32*c2*m0**3*m2*m9 + 48*c2*m0**2*m1**2*m2*m7 - 8*c2*m0**2*m1**2*m9 + 8*c2*m0**2*m1*m13*m9 - 48*c2*m0**2*m1*m2*m8 + 16*c2*m0**2*m13*m2*m8 - 48*c2*m0**2*m2**2*m7 - 6*c2*m0*m1**4*m7 + 8*c2*m0*m1**3*m8 - 8*c2*m0*m1**2*m13*m8 + 16*c2*m0*m1**2*m2*m7 - 32*c2*m0*m1*m13*m2*m7 - 2*c2*m1**4*m7 + 8*c2*m1**3*m13*m7 - 8*m0**4*m1*m12 + 16*m0**4*m11*m2 - 8*m0**4*m12*m13 - 8*m0**3*m1*m10*m2 + 8*m0**3*m10*m13*m2 - 16*m0**3*m2**2*m9 - 24*m0**2*m1**2*m2**2*m7 + 8*m0**2*m1**2*m2*m9 - 8*m0**2*m1*m13*m2*m9 + 24*m0**2*m1*m2**2*m8 - 8*m0**2*m13*m2**2*m8 + 16*m0**2*m2**3*m7 + 6*m0*m1**4*m2*m7 - 8*m0*m1**3*m2*m8 + 8*m0*m1**2*m13*m2*m8 - 8*m0*m1**2*m2**2*m7 + 16*m0*m1*m13*m2**2*m7 + 2*m1**4*m2*m7 - 8*m1**3*m13*m2*m7

# separating m13 terms from non-m13 terms

Zero1 = -8*c1*m0**3 + 8*c2*m0**2*m4 - 12*c2*m0*m1*m3 + 8*m0**3*m6 - 4*m0**2*m1*m5 - 8*m0**2*m2*m4 + 4*m0*m1**2*m4 + 12*m0*m1*m2*m3 - 4*m1**3*m3 + m13**3*m3 + m13*(4*m0**2*m5 - 4*m0*m1*m4 + 3*m1**2*m3)

Zero2 = 16*c0*c2*m0**4 - 16*c0*m0**4*m2 - 16*c2**3*m0**2*m7 - 16*c2**2*m0**3*m9 - 24*c2**2*m0**2*m1**2*m7 + 24*c2**2*m0**2*m1*m8 + 48*c2**2*m0**2*m2*m7 - 8*c2**2*m0*m1**2*m7 - 16*c2*m0**4*m11 + 8*c2*m0**3*m1*m10 + 32*c2*m0**3*m2*m9 + 48*c2*m0**2*m1**2*m2*m7 - 8*c2*m0**2*m1**2*m9 - 48*c2*m0**2*m1*m2*m8 - 48*c2*m0**2*m2**2*m7 - 6*c2*m0*m1**4*m7 + 8*c2*m0*m1**3*m8 + 16*c2*m0*m1**2*m2*m7 - 2*c2*m1**4*m7 - 8*m0**4*m1*m12 + 16*m0**4*m11*m2 - 8*m0**3*m1*m10*m2 - 16*m0**3*m2**2*m9 - 24*m0**2*m1**2*m2**2*m7 + 8*m0**2*m1**2*m2*m9 + 24*m0**2*m1*m2**2*m8 + 16*m0**2*m2**3*m7 + 6*m0*m1**4*m2*m7 - 8*m0*m1**3*m2*m8 - 8*m0*m1**2*m2**2*m7 + 2*m1**4*m2*m7 + m13*(-8*c2**2*m0**2*m8 + 16*c2**2*m0*m1*m7 - 8*c2*m0**3*m10 + 8*c2*m0**2*m1*m9 + 16*c2*m0**2*m2*m8 - 8*c2*m0*m1**2*m8 - 32*c2*m0*m1*m2*m7 + 8*c2*m1**3*m7 - 8*m0**4*m12 + 8*m0**3*m10*m2 - 8*m0**2*m1*m2*m9 - 8*m0**2*m2**2*m8 + 8*m0*m1**2*m2*m8 + 16*m0*m1*m2**2*m7 - 8*m1**3*m2*m7)

# making another expression representation

m14 = -8*c1*m0**3 + 8*c2*m0**2*m4 - 12*c2*m0*m1*m3 + 8*m0**3*m6 - 4*m0**2*m1*m5 - 8*m0**2*m2*m4 + 4*m0*m1**2*m4 + 12*m0*m1*m2*m3 - 4*m1**3*m3 + m13**3*m3 
m15 = 4*m0**2*m5 - 4*m0*m1*m4 + 3*m1**2*m3
m16 = 16*c0*c2*m0**4 - 16*c0*m0**4*m2 - 16*c2**3*m0**2*m7 - 16*c2**2*m0**3*m9 - 24*c2**2*m0**2*m1**2*m7 + 24*c2**2*m0**2*m1*m8 + 48*c2**2*m0**2*m2*m7 - 8*c2**2*m0*m1**2*m7 - 16*c2*m0**4*m11 + 8*c2*m0**3*m1*m10 + 32*c2*m0**3*m2*m9 + 48*c2*m0**2*m1**2*m2*m7 - 8*c2*m0**2*m1**2*m9 - 48*c2*m0**2*m1*m2*m8 - 48*c2*m0**2*m2**2*m7 - 6*c2*m0*m1**4*m7 + 8*c2*m0*m1**3*m8 + 16*c2*m0*m1**2*m2*m7 - 2*c2*m1**4*m7 - 8*m0**4*m1*m12 + 16*m0**4*m11*m2 - 8*m0**3*m1*m10*m2 - 16*m0**3*m2**2*m9 - 24*m0**2*m1**2*m2**2*m7 + 8*m0**2*m1**2*m2*m9 + 24*m0**2*m1*m2**2*m8 + 16*m0**2*m2**3*m7 + 6*m0*m1**4*m2*m7 - 8*m0*m1**3*m2*m8 - 8*m0*m1**2*m2**2*m7 + 2*m1**4*m2*m7 
m17 = -8*c2**2*m0**2*m8 + 16*c2**2*m0*m1*m7 - 8*c2*m0**3*m10 + 8*c2*m0**2*m1*m9 + 16*c2*m0**2*m2*m8 - 8*c2*m0*m1**2*m8 - 32*c2*m0*m1*m2*m7 + 8*c2*m1**3*m7 - 8*m0**4*m12 + 8*m0**3*m10*m2 - 8*m0**2*m1*m2*m9 - 8*m0**2*m2**2*m8 + 8*m0*m1**2*m2*m8 + 16*m0*m1*m2**2*m7 - 8*m1**3*m2*m7
Zero1 = m14 + m15*m13
Zero2 = m16 + m17*m13

m14,m15,m16,m17 = sympy.symbols("m14 m15 m16 m17")
Zero1 = m14**2 - m15**2*(m1*m1 - 4*(m2 - c2)*m0)
Zero2 = m16**2 - m17**2*(m1*m1 - 4*(m2 - c2)*m0)

Zero1 = -4*c2*m0*m15**2 + 4*m0*m15**2*m2 - m1**2*m15**2 + m14**2
Zero2 = -4*c2*m0*m17**2 + 4*m0*m17**2*m2 - m1**2*m17**2 + m16**2


# in terms of  s0, s2, s3, and the c variables
# this succession leads to the formidable definition
# m0 = -5*s2**3*s3**2 + 5*s2*s3**3
# m1 = -2*c3*s2**2*s3 + c3*s3**2 + 20*s0**2*s2**2*s3 - 10*s0**2*s3**2 - 5*s2**2 - 5*s3
# m2 = -c3**2*s2/5 + 4*c3*s0**2*s2 - 3*c3*s0 - 20*s0**4*s2 + 20*s0**3
# m3 = 5*s2**3*s3**4
# m4 = 3*c3*s2**2*s3**3 - 30*s0**2*s2**2*s3**3 + 10*s0*s2**3*s3**2 - 10*s0*s2*s3**3 + 5*s2**4*s3 + 15*s2**2*s3**2 - 5*s3**3
# m5 = 3*c3**2*s2*s3**2/5 - 12*c3*s0**2*s2*s3**2 + 4*c3*s0*s2**2*s3 - 2*c3*s0*s3**2 + c3*s2**3 + 3*c3*s2*s3 + 60*s0**4*s2*s3**2 - 40*s0**3*s2**2*s3 + 20*s0**3*s3**2 - 10*s0**2*s2**3 - 30*s0**2*s2*s3 + 10*s0*s2**2 + 10*s0*s3 - 5*s2
# m6 = c3**3*s3/25 - 6*c3**2*s0**2*s3/5 + 2*c3**2*s0*s2/5 + c3**2/5 + 12*c3*s0**4*s3 - 8*c3*s0**3*s2 - c3*s0**2 - 40*s0**6*s3 + 40*s0**5*s2 - 5*s0**4
# m7 = s2**5*s3**5
# m8 = c3*s2**4*s3**4 - 10*s0**2*s2**4*s3**4 - 5*s0*s2**3*s3**4 - 10*s2**4*s3**3 - 10*s2**2*s3**4 - s3**5
# m9 = 2*c3**2*s2**3*s3**3/5 - 8*c3*s0**2*s2**3*s3**3 - 3*c3*s0*s2**2*s3**3 - 5*c3*s2**3*s3**2 - 3*c3*s2*s3**3 + 40*s0**4*s2**3*s3**3 + 30*s0**3*s2**2*s3**3 + 45*s0**2*s2**3*s3**2 + 35*s0**2*s2*s3**3 - 5*s0*s2**4*s3 - 15*s0*s2**2*s3**2 + 5*s0*s3**3 - s2**5 + 10*s2**3*s3 - 10*s2*s3**2
# m10 = 2*c3**3*s2**2*s3**2/25 - 12*c3**2*s0**2*s2**2*s3**2/5 - 3*c3**2*s0*s2*s3**2/5 - 4*c3**2*s2**2*s3/5 - c3**2*s3**2/5 + 24*c3*s0**4*s2**2*s3**2 + 12*c3*s0**3*s2*s3**2 + 14*c3*s0**2*s2**2*s3 + 5*c3*s0**2*s3**2 - c3*s0*s2**3 - 3*c3*s0*s2*s3 + c3*s2**2 - c3*s3 - 80*s0**6*s2**2*s3**2 - 60*s0**5*s2*s3**2 - 60*s0**4*s2**2*s3 - 30*s0**4*s3**2 + 10*s0**3*s2**3 + 30*s0**3*s2*s3 - 15*s0**2*s2**2 + 5*s0**2*s3 + 5*s0*s2 - 1
# m11 = c3**4*s2*s3/125 - 8*c3**3*s0**2*s2*s3/25 - c3**3*s0*s3/25 - c3**3*s2/25 + 24*c3**2*s0**4*s2*s3/5 + 6*c3**2*s0**3*s3/5 + c3**2*s0**2*s2 - c3**2*s0/5 - 32*c3*s0**6*s2*s3 - 12*c3*s0**5*s3 - 8*c3*s0**4*s2 + 3*c3*s0**3 + 80*s0**8*s2*s3 + 40*s0**7*s3 + 20*s0**6*s2 - 11*s0**5
# m12 = c3**5/3125 - 2*c3**4*s0**2/125 + 8*c3**3*s0**4/25 - 16*c3**2*s0**6/5 + 16*c3*s0**8 - 32*s0**10
# m14 = -8*c1*m0**3 + 8*c2*m0**2*m4 - 12*c2*m0*m1*m3 + 8*m0**3*m6 - 4*m0**2*m1*m5 - 8*m0**2*m2*m4 + 4*m0*m1**2*m4 + 12*m0*m1*m2*m3 - 4*m1**3*m3 + m13**3*m3 
# m15 = 4*m0**2*m5 - 4*m0*m1*m4 + 3*m1**2*m3
# m16 = 16*c0*c2*m0**4 - 16*c0*m0**4*m2 - 16*c2**3*m0**2*m7 - 16*c2**2*m0**3*m9 - 24*c2**2*m0**2*m1**2*m7 + 24*c2**2*m0**2*m1*m8 + 48*c2**2*m0**2*m2*m7 - 8*c2**2*m0*m1**2*m7 - 16*c2*m0**4*m11 + 8*c2*m0**3*m1*m10 + 32*c2*m0**3*m2*m9 + 48*c2*m0**2*m1**2*m2*m7 - 8*c2*m0**2*m1**2*m9 - 48*c2*m0**2*m1*m2*m8 - 48*c2*m0**2*m2**2*m7 - 6*c2*m0*m1**4*m7 + 8*c2*m0*m1**3*m8 + 16*c2*m0*m1**2*m2*m7 - 2*c2*m1**4*m7 - 8*m0**4*m1*m12 + 16*m0**4*m11*m2 - 8*m0**3*m1*m10*m2 - 16*m0**3*m2**2*m9 - 24*m0**2*m1**2*m2**2*m7 + 8*m0**2*m1**2*m2*m9 + 24*m0**2*m1*m2**2*m8 + 16*m0**2*m2**3*m7 + 6*m0*m1**4*m2*m7 - 8*m0*m1**3*m2*m8 - 8*m0*m1**2*m2**2*m7 + 2*m1**4*m2*m7 
# m17 = -8*c2**2*m0**2*m8 + 16*c2**2*m0*m1*m7 - 8*c2*m0**3*m10 + 8*c2*m0**2*m1*m9 + 16*c2*m0**2*m2*m8 - 8*c2*m0*m1**2*m8 - 32*c2*m0*m1*m2*m7 + 8*c2*m1**3*m7 - 8*m0**4*m12 + 8*m0**3*m10*m2 - 8*m0**2*m1*m2*m9 - 8*m0**2*m2**2*m8 + 8*m0*m1**2*m2*m8 + 16*m0*m1*m2**2*m7 - 8*m1**3*m2*m7
# Zero1 = -4*c2*m0*m15**2 + 4*m0*m15**2*m2 - m1**2*m15**2 + m14**2
# Zero2 = -4*c2*m0*m17**2 + 4*m0*m17**2*m2 - m1**2*m17**2 + m16**2

# the resulting calculation would take too much memory so more memory substitutions are going to need to be made

m0 = -5*s2**3*s3**2 + 5*s2*s3**3

m20 = -5*s2**2
m19 = -2*c3*s2**2 + 20*s0**2*s2**2 - 5
m18 = c3 - 10*s0**2
m18, m19, m20 = sympy.symbols('m18 m19 m20')
m1 = m18*s3**2 + m19*s3 + m20

m2 = sympy.symbols('m2')

m3 = 5*s2**3*s3**4

m23 = 5*s2**4
m22 = 10*s0*s2**3 + 15*s2**2
m21 = 3*c3*s2**2 - 30*s0**2*s2**2 - 10*s0*s2 - 5
m21, m22, m23 = sympy.symbols('m21 m22 m23')
m4 = m21*s3**3 + m22*s3**2 + m23*s3

m26 = c3*s2**3 - 10*s0**2*s2**3 + 10*s0*s2**2 - 5*s2
m25 = 4*c3*s0*s2**2 + 3*c3*s2 - 40*s0**3*s2**2 - 30*s0**2*s2 + 10*s0
m24 = 3*c3**2*s2/5 - 12*c3*s0**2*s2 - 2*c3*s0 + 60*s0**4*s2 + 20*s0**3
m24, m25, m26 = sympy.symbols('m24 m25 m26')
m5 = m24*s3**2 + m25*s3 + m26

m28 = 2*c3**2*s0*s2/5 + c3**2/5 - 8*c3*s0**3*s2 - c3*s0**2 + 40*s0**5*s2 - 5*s0**4
m27 = c3**3/25 - 6*c3**2*s0**2/5 + 12*c3*s0**4 - 40*s0**6
m27, m28 = sympy.symbols('m27 m28')
m6 = m27*s3 + m28

m7 = s2**5*s3**5

m30 = -10*s2**4
m29 = c3*s2**4 - 10*s0**2*s2**4 - 5*s0*s2**3 - 10*s2**2
m29, m30 = sympy.symbols('m29 m30')
m8 = -s3**5 + m29*s3**4 + m30*s3**3

m38 = -s2**5
m37 = -5*s0*s2**4 + 10*s2**3
m36 = -5*c3*s2**3 + 45*s0**2*s2**3 - 15*s0*s2**2 - 10*s2
m35 = 2*c3**2*s2**3/5 - 8*c3*s0**2*s2**3 - 3*c3*s0*s2**2 - 3*c3*s2 + 40*s0**4*s2**3 + 30*s0**3*s2**2 + 35*s0**2*s2 + 5*s0
m35, m36, m37, m38 = sympy.symbols('m35 m36 m37 m38')
m9 = m35*s3**3 + m36*s3**2 + m37*s3 + m38

m41 = -c3*s0*s2**3 + c3*s2**2 + 10*s0**3*s2**3 - 15*s0**2*s2**2 + 5*s0*s2 - 1
m40 = -4*c3**2*s2**2/5 + 14*c3*s0**2*s2**2 - 3*c3*s0*s2 - c3 - 60*s0**4*s2**2 + 30*s0**3*s2 + 5*s0**2
m39 = 2*c3**3*s2**2/25 - 12*c3**2*s0**2*s2**2/5 - 3*c3**2*s0*s2/5 - c3**2/5 + 24*c3*s0**4*s2**2 + 12*c3*s0**3*s2 + 5*c3*s0**2 - 80*s0**6*s2**2 - 60*s0**5*s2 - 30*s0**4
m39, m40, m41 = sympy.symbols('m39 m40 m41')
m10 = m39*s3**2 + m40*s3 + m41

m43 = -c3**3*s2/25 + c3**2*s0**2*s2 - c3**2*s0/5 - 8*c3*s0**4*s2 + 3*c3*s0**3 + 20*s0**6*s2 - 11*s0**5
m42 = c3**4*s2/125 - 8*c3**3*s0**2*s2/25 - c3**3*s0/25 + 24*c3**2*s0**4*s2/5 + 6*c3**2*s0**3/5 - 32*c3*s0**6*s2 - 12*c3*s0**5 + 80*s0**8*s2 + 40*s0**7
m42, m43 = sympy.symbols('m42 m43')
m11 = m42*s3 + m43

m12 = sympy.symbols('m12')

m51 = -20*m20**2*m23*s2**3
m50 = 5*m13**3*s2**3 - 40*m19*m20*m23*s2**3 - 20*m20**3*s2**3 - 20*m20**2*m22*s2**3 + 20*m20**2*m23*s2 - 100*m20*m26*s2**6
m49 = 200*c2*m23*s2**6 - 40*m18*m20*m23*s2**3 - 20*m19**2*m23*s2**3 - 60*m19*m20**2*s2**3 - 40*m19*m20*m22*s2**3 + 40*m19*m20*m23*s2 - 100*m19*m26*s2**6 - 200*m2*m23*s2**6 - 20*m20**2*m21*s2**3 + 20*m20**2*m22*s2 - 100*m20*m25*s2**6 + 200*m20*m26*s2**4
m48 = 1000*c1*s2**9 + 300*c2*m20*s2**6 + 200*c2*m22*s2**6 - 400*c2*m23*s2**4 - 40*m18*m19*m23*s2**3 - 60*m18*m20**2*s2**3 - 40*m18*m20*m22*s2**3 + 40*m18*m20*m23*s2 - 100*m18*m26*s2**6 - 60*m19**2*m20*s2**3 - 20*m19**2*m22*s2**3 + 20*m19**2*m23*s2 - 40*m19*m20*m21*s2**3 + 40*m19*m20*m22*s2 - 100*m19*m25*s2**6 + 200*m19*m26*s2**4 - 300*m2*m20*s2**6 - 200*m2*m22*s2**6 + 400*m2*m23*s2**4 + 20*m20**2*m21*s2 - 100*m20*m24*s2**6 + 200*m20*m25*s2**4 - 100*m20*m26*s2**2 - 1000*m28*s2**9
m47 = -3000*c1*s2**7 + 300*c2*m19*s2**6 - 300*c2*m20*s2**4 + 200*c2*m21*s2**6 - 400*c2*m22*s2**4 + 200*c2*m23*s2**2 - 20*m18**2*m23*s2**3 - 120*m18*m19*m20*s2**3 - 40*m18*m19*m22*s2**3 + 40*m18*m19*m23*s2 - 40*m18*m20*m21*s2**3 + 40*m18*m20*m22*s2 - 100*m18*m25*s2**6 + 200*m18*m26*s2**4 - 20*m19**3*s2**3 - 20*m19**2*m21*s2**3 + 20*m19**2*m22*s2 - 300*m19*m2*s2**6 + 40*m19*m20*m21*s2 - 100*m19*m24*s2**6 + 200*m19*m25*s2**4 - 100*m19*m26*s2**2 + 300*m2*m20*s2**4 - 200*m2*m21*s2**6 + 400*m2*m22*s2**4 - 200*m2*m23*s2**2 + 200*m20*m24*s2**4 - 100*m20*m25*s2**2 - 1000*m27*s2**9 + 3000*m28*s2**7
m46 = 3000*c1*s2**5 + 300*c2*m18*s2**6 - 300*c2*m19*s2**4 - 400*c2*m21*s2**4 + 200*c2*m22*s2**2 - 60*m18**2*m20*s2**3 - 20*m18**2*m22*s2**3 + 20*m18**2*m23*s2 - 60*m18*m19**2*s2**3 - 40*m18*m19*m21*s2**3 + 40*m18*m19*m22*s2 - 300*m18*m2*s2**6 + 40*m18*m20*m21*s2 - 100*m18*m24*s2**6 + 200*m18*m25*s2**4 - 100*m18*m26*s2**2 + 20*m19**2*m21*s2 + 300*m19*m2*s2**4 + 200*m19*m24*s2**4 - 100*m19*m25*s2**2 + 400*m2*m21*s2**4 - 200*m2*m22*s2**2 - 100*m20*m24*s2**2 + 3000*m27*s2**7 - 3000*m28*s2**5
m45 = -1000*c1*s2**3 - 300*c2*m18*s2**4 + 200*c2*m21*s2**2 - 60*m18**2*m19*s2**3 - 20*m18**2*m21*s2**3 + 20*m18**2*m22*s2 + 40*m18*m19*m21*s2 + 300*m18*m2*s2**4 + 200*m18*m24*s2**4 - 100*m18*m25*s2**2 - 100*m19*m24*s2**2 - 200*m2*m21*s2**2 - 3000*m27*s2**5 + 1000*m28*s2**3
m44 = -20*m18**3*s2**3 + 20*m18**2*m21*s2 - 100*m18*m24*s2**2 + 1000*m27*s2**3
m44, m45, m46, m47, m48, m49, m50, m51 = sympy.symbols('m44 m45 m46 m47 m48 m49 m50 m51')
m14 = m44*s3**10 + m45*s3**9 + m46*s3**8 + m47*s3**7 + m48*s3**6 + m49*s3**5 + m50*s3**4 + m51*s3**3

m57 = 20*m20*m23*s2**3
m56 = 20*m19*m23*s2**3 + 15*m20**2*s2**3 + 20*m20*m22*s2**3 - 20*m20*m23*s2 + 100*m26*s2**6
m55 = 20*m18*m23*s2**3 + 30*m19*m20*s2**3 + 20*m19*m22*s2**3 - 20*m19*m23*s2 + 20*m20*m21*s2**3 - 20*m20*m22*s2 + 100*m25*s2**6 - 200*m26*s2**4
m54 = 30*m18*m20*s2**3 + 20*m18*m22*s2**3 - 20*m18*m23*s2 + 15*m19**2*s2**3 + 20*m19*m21*s2**3 - 20*m19*m22*s2 - 20*m20*m21*s2 + 100*m24*s2**6 - 200*m25*s2**4 + 100*m26*s2**2
m53 = 30*m18*m19*s2**3 + 20*m18*m21*s2**3 - 20*m18*m22*s2 - 20*m19*m21*s2 - 200*m24*s2**4 + 100*m25*s2**2
m52 = 15*m18**2*s2**3 - 20*m18*m21*s2 + 100*m24*s2**2
m52, m53, m54, m55, m56, m57 = sympy.symbols('m52 m53 m54 m55 m56 m57')
m15 = m52*s3**8 + m53*s3**7 + m54*s3**6 + m55*s3**5 + m56*s3**4 + m57*s3**3



m70 = -200*c2*m20**2*m38*s2**6 + 200*m2*m20**2*m38*s2**6
m69 = -400*c2*m19*m20*m38*s2**6 - 2*c2*m20**4*s2**5 - 40*c2*m20**3*m30*s2**3 - 200*c2*m20**2*m37*s2**6 + 400*c2*m20**2*m38*s2**4 + 400*m19*m2*m20*m38*s2**6 + 2*m2*m20**4*s2**5 + 40*m2*m20**3*m30*s2**3 + 200*m2*m20**2*m37*s2**6 - 400*m2*m20**2*m38*s2**4
m68 = 2000*c2**2*m38*s2**9 - 400*c2*m18*m20*m38*s2**6 - 200*c2*m19**2*m38*s2**6 - 8*c2*m19*m20**3*s2**5 - 120*c2*m19*m20**2*m30*s2**3 - 400*c2*m19*m20*m37*s2**6 + 800*c2*m19*m20*m38*s2**4 - 4000*c2*m2*m38*s2**9 - 40*c2*m20**3*m29*s2**3 + 40*c2*m20**3*m30*s2 - 200*c2*m20**2*m36*s2**6 + 400*c2*m20**2*m37*s2**4 - 200*c2*m20**2*m38*s2**2 - 1000*c2*m20*m41*s2**9 + 400*m18*m2*m20*m38*s2**6 + 200*m19**2*m2*m38*s2**6 + 8*m19*m2*m20**3*s2**5 + 120*m19*m2*m20**2*m30*s2**3 + 400*m19*m2*m20*m37*s2**6 - 800*m19*m2*m20*m38*s2**4 + 2000*m2**2*m38*s2**9 + 40*m2*m20**3*m29*s2**3 - 40*m2*m20**3*m30*s2 + 200*m2*m20**2*m36*s2**6 - 400*m2*m20**2*m37*s2**4 + 200*m2*m20**2*m38*s2**2 + 1000*m2*m20*m41*s2**9
m67 = 40*c2**2*m20**2*s2**8 + 600*c2**2*m20*m30*s2**6 + 2000*c2**2*m37*s2**9 - 6000*c2**2*m38*s2**7 - 400*c2*m18*m19*m38*s2**6 - 8*c2*m18*m20**3*s2**5 - 120*c2*m18*m20**2*m30*s2**3 - 400*c2*m18*m20*m37*s2**6 + 800*c2*m18*m20*m38*s2**4 - 12*c2*m19**2*m20**2*s2**5 - 120*c2*m19**2*m20*m30*s2**3 - 200*c2*m19**2*m37*s2**6 + 400*c2*m19**2*m38*s2**4 - 120*c2*m19*m20**2*m29*s2**3 + 120*c2*m19*m20**2*m30*s2 - 400*c2*m19*m20*m36*s2**6 + 800*c2*m19*m20*m37*s2**4 - 400*c2*m19*m20*m38*s2**2 - 1000*c2*m19*m41*s2**9 - 80*c2*m2*m20**2*s2**8 - 1200*c2*m2*m20*m30*s2**6 - 4000*c2*m2*m37*s2**9 + 12000*c2*m2*m38*s2**7 + 30*c2*m20**4*s2**8 + 40*c2*m20**3*m29*s2 + 40*c2*m20**3*s2**3 - 200*c2*m20**2*m35*s2**6 + 400*c2*m20**2*m36*s2**4 - 200*c2*m20**2*m37*s2**2 - 1000*c2*m20*m40*s2**9 + 3000*c2*m20*m41*s2**7 + 400*m18*m19*m2*m38*s2**6 + 8*m18*m2*m20**3*s2**5 + 120*m18*m2*m20**2*m30*s2**3 + 400*m18*m2*m20*m37*s2**6 - 800*m18*m2*m20*m38*s2**4 + 12*m19**2*m2*m20**2*s2**5 + 120*m19**2*m2*m20*m30*s2**3 + 200*m19**2*m2*m37*s2**6 - 400*m19**2*m2*m38*s2**4 + 120*m19*m2*m20**2*m29*s2**3 - 120*m19*m2*m20**2*m30*s2 + 400*m19*m2*m20*m36*s2**6 - 800*m19*m2*m20*m37*s2**4 + 400*m19*m2*m20*m38*s2**2 + 1000*m19*m2*m41*s2**9 + 40*m2**2*m20**2*s2**8 + 600*m2**2*m20*m30*s2**6 + 2000*m2**2*m37*s2**9 - 6000*m2**2*m38*s2**7 - 30*m2*m20**4*s2**8 - 40*m2*m20**3*m29*s2 - 40*m2*m20**3*s2**3 + 200*m2*m20**2*m35*s2**6 - 400*m2*m20**2*m36*s2**4 + 200*m2*m20**2*m37*s2**2 + 1000*m2*m20*m40*s2**9 - 3000*m2*m20*m41*s2**7
m66 = 10000*c0*c2*s2**12 - 10000*c0*m2*s2**12 + 80*c2**2*m19*m20*s2**8 + 600*c2**2*m19*m30*s2**6 - 40*c2**2*m20**2*s2**6 + 600*c2**2*m20*m29*s2**6 - 1200*c2**2*m20*m30*s2**4 + 2000*c2**2*m36*s2**9 - 6000*c2**2*m37*s2**7 + 6000*c2**2*m38*s2**5 - 200*c2*m18**2*m38*s2**6 - 24*c2*m18*m19*m20**2*s2**5 - 240*c2*m18*m19*m20*m30*s2**3 - 400*c2*m18*m19*m37*s2**6 + 800*c2*m18*m19*m38*s2**4 - 120*c2*m18*m20**2*m29*s2**3 + 120*c2*m18*m20**2*m30*s2 - 400*c2*m18*m20*m36*s2**6 + 800*c2*m18*m20*m37*s2**4 - 400*c2*m18*m20*m38*s2**2 - 1000*c2*m18*m41*s2**9 - 8*c2*m19**3*m20*s2**5 - 40*c2*m19**3*m30*s2**3 - 120*c2*m19**2*m20*m29*s2**3 + 120*c2*m19**2*m20*m30*s2 - 200*c2*m19**2*m36*s2**6 + 400*c2*m19**2*m37*s2**4 - 200*c2*m19**2*m38*s2**2 - 160*c2*m19*m2*m20*s2**8 - 1200*c2*m19*m2*m30*s2**6 + 120*c2*m19*m20**3*s2**8 + 120*c2*m19*m20**2*m29*s2 + 120*c2*m19*m20**2*s2**3 - 400*c2*m19*m20*m35*s2**6 + 800*c2*m19*m20*m36*s2**4 - 400*c2*m19*m20*m37*s2**2 - 1000*c2*m19*m40*s2**9 + 3000*c2*m19*m41*s2**7 + 80*c2*m2*m20**2*s2**6 - 1200*c2*m2*m20*m29*s2**6 + 2400*c2*m2*m20*m30*s2**4 - 4000*c2*m2*m36*s2**9 + 12000*c2*m2*m37*s2**7 - 12000*c2*m2*m38*s2**5 - 30*c2*m20**4*s2**6 - 40*c2*m20**3*s2 + 400*c2*m20**2*m35*s2**4 - 200*c2*m20**2*m36*s2**2 - 1000*c2*m20*m39*s2**9 + 3000*c2*m20*m40*s2**7 - 3000*c2*m20*m41*s2**5 - 10000*c2*m43*s2**12 - 5000*m12*m20*s2**12 + 200*m18**2*m2*m38*s2**6 + 24*m18*m19*m2*m20**2*s2**5 + 240*m18*m19*m2*m20*m30*s2**3 + 400*m18*m19*m2*m37*s2**6 - 800*m18*m19*m2*m38*s2**4 + 120*m18*m2*m20**2*m29*s2**3 - 120*m18*m2*m20**2*m30*s2 + 400*m18*m2*m20*m36*s2**6 - 800*m18*m2*m20*m37*s2**4 + 400*m18*m2*m20*m38*s2**2 + 1000*m18*m2*m41*s2**9 + 8*m19**3*m2*m20*s2**5 + 40*m19**3*m2*m30*s2**3 + 120*m19**2*m2*m20*m29*s2**3 - 120*m19**2*m2*m20*m30*s2 + 200*m19**2*m2*m36*s2**6 - 400*m19**2*m2*m37*s2**4 + 200*m19**2*m2*m38*s2**2 + 80*m19*m2**2*m20*s2**8 + 600*m19*m2**2*m30*s2**6 - 120*m19*m2*m20**3*s2**8 - 120*m19*m2*m20**2*m29*s2 - 120*m19*m2*m20**2*s2**3 + 400*m19*m2*m20*m35*s2**6 - 800*m19*m2*m20*m36*s2**4 + 400*m19*m2*m20*m37*s2**2 + 1000*m19*m2*m40*s2**9 - 3000*m19*m2*m41*s2**7 - 40*m2**2*m20**2*s2**6 + 600*m2**2*m20*m29*s2**6 - 1200*m2**2*m20*m30*s2**4 + 2000*m2**2*m36*s2**9 - 6000*m2**2*m37*s2**7 + 6000*m2**2*m38*s2**5 + 30*m2*m20**4*s2**6 + 40*m2*m20**3*s2 - 400*m2*m20**2*m35*s2**4 + 200*m2*m20**2*m36*s2**2 + 1000*m2*m20*m39*s2**9 - 3000*m2*m20*m40*s2**7 + 3000*m2*m20*m41*s2**5 + 10000*m2*m43*s2**12
m65 = -40000*c0*c2*s2**10 + 40000*c0*m2*s2**10 - 400*c2**3*s2**11 + 80*c2**2*m18*m20*s2**8 + 600*c2**2*m18*m30*s2**6 + 40*c2**2*m19**2*s2**8 - 80*c2**2*m19*m20*s2**6 + 600*c2**2*m19*m29*s2**6 - 1200*c2**2*m19*m30*s2**4 + 1200*c2**2*m2*s2**11 - 600*c2**2*m20**2*s2**11 - 1200*c2**2*m20*m29*s2**4 + 600*c2**2*m20*m30*s2**2 - 600*c2**2*m20*s2**6 + 2000*c2**2*m35*s2**9 - 6000*c2**2*m36*s2**7 + 6000*c2**2*m37*s2**5 - 2000*c2**2*m38*s2**3 - 12*c2*m18**2*m20**2*s2**5 - 120*c2*m18**2*m20*m30*s2**3 - 200*c2*m18**2*m37*s2**6 + 400*c2*m18**2*m38*s2**4 - 24*c2*m18*m19**2*m20*s2**5 - 120*c2*m18*m19**2*m30*s2**3 - 240*c2*m18*m19*m20*m29*s2**3 + 240*c2*m18*m19*m20*m30*s2 - 400*c2*m18*m19*m36*s2**6 + 800*c2*m18*m19*m37*s2**4 - 400*c2*m18*m19*m38*s2**2 - 160*c2*m18*m2*m20*s2**8 - 1200*c2*m18*m2*m30*s2**6 + 120*c2*m18*m20**3*s2**8 + 120*c2*m18*m20**2*m29*s2 + 120*c2*m18*m20**2*s2**3 - 400*c2*m18*m20*m35*s2**6 + 800*c2*m18*m20*m36*s2**4 - 400*c2*m18*m20*m37*s2**2 - 1000*c2*m18*m40*s2**9 + 3000*c2*m18*m41*s2**7 - 2*c2*m19**4*s2**5 - 40*c2*m19**3*m29*s2**3 + 40*c2*m19**3*m30*s2 - 80*c2*m19**2*m2*s2**8 + 180*c2*m19**2*m20**2*s2**8 + 120*c2*m19**2*m20*m29*s2 + 120*c2*m19**2*m20*s2**3 - 200*c2*m19**2*m35*s2**6 + 400*c2*m19**2*m36*s2**4 - 200*c2*m19**2*m37*s2**2 + 160*c2*m19*m2*m20*s2**6 - 1200*c2*m19*m2*m29*s2**6 + 2400*c2*m19*m2*m30*s2**4 - 120*c2*m19*m20**3*s2**6 - 120*c2*m19*m20**2*s2 + 800*c2*m19*m20*m35*s2**4 - 400*c2*m19*m20*m36*s2**2 - 1000*c2*m19*m39*s2**9 + 3000*c2*m19*m40*s2**7 - 3000*c2*m19*m41*s2**5 - 1200*c2*m2**2*s2**11 + 1200*c2*m2*m20**2*s2**11 + 2400*c2*m2*m20*m29*s2**4 - 1200*c2*m2*m20*m30*s2**2 + 1200*c2*m2*m20*s2**6 - 4000*c2*m2*m35*s2**9 + 12000*c2*m2*m36*s2**7 - 12000*c2*m2*m37*s2**5 + 4000*c2*m2*m38*s2**3 - 200*c2*m20**2*m35*s2**2 + 3000*c2*m20*m39*s2**7 - 3000*c2*m20*m40*s2**5 + 1000*c2*m20*m41*s2**3 - 10000*c2*m42*s2**12 + 40000*c2*m43*s2**10 - 5000*m12*m19*s2**12 + 20000*m12*m20*s2**10 + 12*m18**2*m2*m20**2*s2**5 + 120*m18**2*m2*m20*m30*s2**3 + 200*m18**2*m2*m37*s2**6 - 400*m18**2*m2*m38*s2**4 + 24*m18*m19**2*m2*m20*s2**5 + 120*m18*m19**2*m2*m30*s2**3 + 240*m18*m19*m2*m20*m29*s2**3 - 240*m18*m19*m2*m20*m30*s2 + 400*m18*m19*m2*m36*s2**6 - 800*m18*m19*m2*m37*s2**4 + 400*m18*m19*m2*m38*s2**2 + 80*m18*m2**2*m20*s2**8 + 600*m18*m2**2*m30*s2**6 - 120*m18*m2*m20**3*s2**8 - 120*m18*m2*m20**2*m29*s2 - 120*m18*m2*m20**2*s2**3 + 400*m18*m2*m20*m35*s2**6 - 800*m18*m2*m20*m36*s2**4 + 400*m18*m2*m20*m37*s2**2 + 1000*m18*m2*m40*s2**9 - 3000*m18*m2*m41*s2**7 + 2*m19**4*m2*s2**5 + 40*m19**3*m2*m29*s2**3 - 40*m19**3*m2*m30*s2 + 40*m19**2*m2**2*s2**8 - 180*m19**2*m2*m20**2*s2**8 - 120*m19**2*m2*m20*m29*s2 - 120*m19**2*m2*m20*s2**3 + 200*m19**2*m2*m35*s2**6 - 400*m19**2*m2*m36*s2**4 + 200*m19**2*m2*m37*s2**2 - 80*m19*m2**2*m20*s2**6 + 600*m19*m2**2*m29*s2**6 - 1200*m19*m2**2*m30*s2**4 + 120*m19*m2*m20**3*s2**6 + 120*m19*m2*m20**2*s2 - 800*m19*m2*m20*m35*s2**4 + 400*m19*m2*m20*m36*s2**2 + 1000*m19*m2*m39*s2**9 - 3000*m19*m2*m40*s2**7 + 3000*m19*m2*m41*s2**5 + 400*m2**3*s2**11 - 600*m2**2*m20**2*s2**11 - 1200*m2**2*m20*m29*s2**4 + 600*m2**2*m20*m30*s2**2 - 600*m2**2*m20*s2**6 + 2000*m2**2*m35*s2**9 - 6000*m2**2*m36*s2**7 + 6000*m2**2*m37*s2**5 - 2000*m2**2*m38*s2**3 + 200*m2*m20**2*m35*s2**2 - 3000*m2*m20*m39*s2**7 + 3000*m2*m20*m40*s2**5 - 1000*m2*m20*m41*s2**3 + 10000*m2*m42*s2**12 - 40000*m2*m43*s2**10
m64 = 60000*c0*c2*s2**8 - 60000*c0*m2*s2**8 + 800*c2**3*s2**9 + 80*c2**2*m18*m19*s2**8 - 80*c2**2*m18*m20*s2**6 + 600*c2**2*m18*m29*s2**6 - 1200*c2**2*m18*m30*s2**4 - 40*c2**2*m19**2*s2**6 - 1200*c2**2*m19*m20*s2**11 - 1200*c2**2*m19*m29*s2**4 + 600*c2**2*m19*m30*s2**2 - 600*c2**2*m19*s2**6 - 2400*c2**2*m2*s2**9 + 1200*c2**2*m20**2*s2**9 + 600*c2**2*m20*m29*s2**2 + 1200*c2**2*m20*s2**4 - 6000*c2**2*m35*s2**7 + 6000*c2**2*m36*s2**5 - 2000*c2**2*m37*s2**3 - 24*c2*m18**2*m19*m20*s2**5 - 120*c2*m18**2*m19*m30*s2**3 - 120*c2*m18**2*m20*m29*s2**3 + 120*c2*m18**2*m20*m30*s2 - 200*c2*m18**2*m36*s2**6 + 400*c2*m18**2*m37*s2**4 - 200*c2*m18**2*m38*s2**2 - 8*c2*m18*m19**3*s2**5 - 120*c2*m18*m19**2*m29*s2**3 + 120*c2*m18*m19**2*m30*s2 - 160*c2*m18*m19*m2*s2**8 + 360*c2*m18*m19*m20**2*s2**8 + 240*c2*m18*m19*m20*m29*s2 + 240*c2*m18*m19*m20*s2**3 - 400*c2*m18*m19*m35*s2**6 + 800*c2*m18*m19*m36*s2**4 - 400*c2*m18*m19*m37*s2**2 + 160*c2*m18*m2*m20*s2**6 - 1200*c2*m18*m2*m29*s2**6 + 2400*c2*m18*m2*m30*s2**4 - 120*c2*m18*m20**3*s2**6 - 120*c2*m18*m20**2*s2 + 800*c2*m18*m20*m35*s2**4 - 400*c2*m18*m20*m36*s2**2 - 1000*c2*m18*m39*s2**9 + 3000*c2*m18*m40*s2**7 - 3000*c2*m18*m41*s2**5 + 120*c2*m19**3*m20*s2**8 + 40*c2*m19**3*m29*s2 + 40*c2*m19**3*s2**3 + 80*c2*m19**2*m2*s2**6 - 180*c2*m19**2*m20**2*s2**6 - 120*c2*m19**2*m20*s2 + 400*c2*m19**2*m35*s2**4 - 200*c2*m19**2*m36*s2**2 + 2400*c2*m19*m2*m20*s2**11 + 2400*c2*m19*m2*m29*s2**4 - 1200*c2*m19*m2*m30*s2**2 + 1200*c2*m19*m2*s2**6 - 400*c2*m19*m20*m35*s2**2 + 3000*c2*m19*m39*s2**7 - 3000*c2*m19*m40*s2**5 + 1000*c2*m19*m41*s2**3 + 2400*c2*m2**2*s2**9 - 2400*c2*m2*m20**2*s2**9 - 1200*c2*m2*m20*m29*s2**2 - 2400*c2*m2*m20*s2**4 + 12000*c2*m2*m35*s2**7 - 12000*c2*m2*m36*s2**5 + 4000*c2*m2*m37*s2**3 - 3000*c2*m20*m39*s2**5 + 1000*c2*m20*m40*s2**3 + 40000*c2*m42*s2**10 - 60000*c2*m43*s2**8 - 5000*m12*m18*s2**12 + 20000*m12*m19*s2**10 - 30000*m12*m20*s2**8 + 24*m18**2*m19*m2*m20*s2**5 + 120*m18**2*m19*m2*m30*s2**3 + 120*m18**2*m2*m20*m29*s2**3 - 120*m18**2*m2*m20*m30*s2 + 200*m18**2*m2*m36*s2**6 - 400*m18**2*m2*m37*s2**4 + 200*m18**2*m2*m38*s2**2 + 8*m18*m19**3*m2*s2**5 + 120*m18*m19**2*m2*m29*s2**3 - 120*m18*m19**2*m2*m30*s2 + 80*m18*m19*m2**2*s2**8 - 360*m18*m19*m2*m20**2*s2**8 - 240*m18*m19*m2*m20*m29*s2 - 240*m18*m19*m2*m20*s2**3 + 400*m18*m19*m2*m35*s2**6 - 800*m18*m19*m2*m36*s2**4 + 400*m18*m19*m2*m37*s2**2 - 80*m18*m2**2*m20*s2**6 + 600*m18*m2**2*m29*s2**6 - 1200*m18*m2**2*m30*s2**4 + 120*m18*m2*m20**3*s2**6 + 120*m18*m2*m20**2*s2 - 800*m18*m2*m20*m35*s2**4 + 400*m18*m2*m20*m36*s2**2 + 1000*m18*m2*m39*s2**9 - 3000*m18*m2*m40*s2**7 + 3000*m18*m2*m41*s2**5 - 120*m19**3*m2*m20*s2**8 - 40*m19**3*m2*m29*s2 - 40*m19**3*m2*s2**3 - 40*m19**2*m2**2*s2**6 + 180*m19**2*m2*m20**2*s2**6 + 120*m19**2*m2*m20*s2 - 400*m19**2*m2*m35*s2**4 + 200*m19**2*m2*m36*s2**2 - 1200*m19*m2**2*m20*s2**11 - 1200*m19*m2**2*m29*s2**4 + 600*m19*m2**2*m30*s2**2 - 600*m19*m2**2*s2**6 + 400*m19*m2*m20*m35*s2**2 - 3000*m19*m2*m39*s2**7 + 3000*m19*m2*m40*s2**5 - 1000*m19*m2*m41*s2**3 - 800*m2**3*s2**9 + 1200*m2**2*m20**2*s2**9 + 600*m2**2*m20*m29*s2**2 + 1200*m2**2*m20*s2**4 - 6000*m2**2*m35*s2**7 + 6000*m2**2*m36*s2**5 - 2000*m2**2*m37*s2**3 + 3000*m2*m20*m39*s2**5 - 1000*m2*m20*m40*s2**3 - 40000*m2*m42*s2**10 + 60000*m2*m43*s2**8
m63 = -40000*c0*c2*s2**6 + 40000*c0*m2*s2**6 - 400*c2**3*s2**7 + 40*c2**2*m18**2*s2**8 - 80*c2**2*m18*m19*s2**6 - 1200*c2**2*m18*m20*s2**11 - 1200*c2**2*m18*m29*s2**4 + 600*c2**2*m18*m30*s2**2 - 600*c2**2*m18*s2**6 - 600*c2**2*m19**2*s2**11 + 2400*c2**2*m19*m20*s2**9 + 600*c2**2*m19*m29*s2**2 + 1200*c2**2*m19*s2**4 + 1200*c2**2*m2*s2**7 - 600*c2**2*m20**2*s2**7 - 600*c2**2*m20*s2**2 + 6000*c2**2*m35*s2**5 - 2000*c2**2*m36*s2**3 - 8*c2*m18**3*m20*s2**5 - 40*c2*m18**3*m30*s2**3 - 12*c2*m18**2*m19**2*s2**5 - 120*c2*m18**2*m19*m29*s2**3 + 120*c2*m18**2*m19*m30*s2 - 80*c2*m18**2*m2*s2**8 + 180*c2*m18**2*m20**2*s2**8 + 120*c2*m18**2*m20*m29*s2 + 120*c2*m18**2*m20*s2**3 - 200*c2*m18**2*m35*s2**6 + 400*c2*m18**2*m36*s2**4 - 200*c2*m18**2*m37*s2**2 + 360*c2*m18*m19**2*m20*s2**8 + 120*c2*m18*m19**2*m29*s2 + 120*c2*m18*m19**2*s2**3 + 160*c2*m18*m19*m2*s2**6 - 360*c2*m18*m19*m20**2*s2**6 - 240*c2*m18*m19*m20*s2 + 800*c2*m18*m19*m35*s2**4 - 400*c2*m18*m19*m36*s2**2 + 2400*c2*m18*m2*m20*s2**11 + 2400*c2*m18*m2*m29*s2**4 - 1200*c2*m18*m2*m30*s2**2 + 1200*c2*m18*m2*s2**6 - 400*c2*m18*m20*m35*s2**2 + 3000*c2*m18*m39*s2**7 - 3000*c2*m18*m40*s2**5 + 1000*c2*m18*m41*s2**3 + 30*c2*m19**4*s2**8 - 120*c2*m19**3*m20*s2**6 - 40*c2*m19**3*s2 + 1200*c2*m19**2*m2*s2**11 - 200*c2*m19**2*m35*s2**2 - 4800*c2*m19*m2*m20*s2**9 - 1200*c2*m19*m2*m29*s2**2 - 2400*c2*m19*m2*s2**4 - 3000*c2*m19*m39*s2**5 + 1000*c2*m19*m40*s2**3 - 1200*c2*m2**2*s2**7 + 1200*c2*m2*m20**2*s2**7 + 1200*c2*m2*m20*s2**2 - 12000*c2*m2*m35*s2**5 + 4000*c2*m2*m36*s2**3 + 1000*c2*m20*m39*s2**3 - 60000*c2*m42*s2**8 + 40000*c2*m43*s2**6 + 20000*m12*m18*s2**10 - 30000*m12*m19*s2**8 + 20000*m12*m20*s2**6 + 8*m18**3*m2*m20*s2**5 + 40*m18**3*m2*m30*s2**3 + 12*m18**2*m19**2*m2*s2**5 + 120*m18**2*m19*m2*m29*s2**3 - 120*m18**2*m19*m2*m30*s2 + 40*m18**2*m2**2*s2**8 - 180*m18**2*m2*m20**2*s2**8 - 120*m18**2*m2*m20*m29*s2 - 120*m18**2*m2*m20*s2**3 + 200*m18**2*m2*m35*s2**6 - 400*m18**2*m2*m36*s2**4 + 200*m18**2*m2*m37*s2**2 - 360*m18*m19**2*m2*m20*s2**8 - 120*m18*m19**2*m2*m29*s2 - 120*m18*m19**2*m2*s2**3 - 80*m18*m19*m2**2*s2**6 + 360*m18*m19*m2*m20**2*s2**6 + 240*m18*m19*m2*m20*s2 - 800*m18*m19*m2*m35*s2**4 + 400*m18*m19*m2*m36*s2**2 - 1200*m18*m2**2*m20*s2**11 - 1200*m18*m2**2*m29*s2**4 + 600*m18*m2**2*m30*s2**2 - 600*m18*m2**2*s2**6 + 400*m18*m2*m20*m35*s2**2 - 3000*m18*m2*m39*s2**7 + 3000*m18*m2*m40*s2**5 - 1000*m18*m2*m41*s2**3 - 30*m19**4*m2*s2**8 + 120*m19**3*m2*m20*s2**6 + 40*m19**3*m2*s2 - 600*m19**2*m2**2*s2**11 + 200*m19**2*m2*m35*s2**2 + 2400*m19*m2**2*m20*s2**9 + 600*m19*m2**2*m29*s2**2 + 1200*m19*m2**2*s2**4 + 3000*m19*m2*m39*s2**5 - 1000*m19*m2*m40*s2**3 + 400*m2**3*s2**7 - 600*m2**2*m20**2*s2**7 - 600*m2**2*m20*s2**2 + 6000*m2**2*m35*s2**5 - 2000*m2**2*m36*s2**3 - 1000*m2*m20*m39*s2**3 + 60000*m2*m42*s2**8 - 40000*m2*m43*s2**6
m62 = 10000*c0*c2*s2**4 - 10000*c0*m2*s2**4 - 40*c2**2*m18**2*s2**6 - 1200*c2**2*m18*m19*s2**11 + 2400*c2**2*m18*m20*s2**9 + 600*c2**2*m18*m29*s2**2 + 1200*c2**2*m18*s2**4 + 1200*c2**2*m19**2*s2**9 - 1200*c2**2*m19*m20*s2**7 - 600*c2**2*m19*s2**2 - 2000*c2**2*m35*s2**3 - 8*c2*m18**3*m19*s2**5 - 40*c2*m18**3*m29*s2**3 + 40*c2*m18**3*m30*s2 + 360*c2*m18**2*m19*m20*s2**8 + 120*c2*m18**2*m19*m29*s2 + 120*c2*m18**2*m19*s2**3 + 80*c2*m18**2*m2*s2**6 - 180*c2*m18**2*m20**2*s2**6 - 120*c2*m18**2*m20*s2 + 400*c2*m18**2*m35*s2**4 - 200*c2*m18**2*m36*s2**2 + 120*c2*m18*m19**3*s2**8 - 360*c2*m18*m19**2*m20*s2**6 - 120*c2*m18*m19**2*s2 + 2400*c2*m18*m19*m2*s2**11 - 400*c2*m18*m19*m35*s2**2 - 4800*c2*m18*m2*m20*s2**9 - 1200*c2*m18*m2*m29*s2**2 - 2400*c2*m18*m2*s2**4 - 3000*c2*m18*m39*s2**5 + 1000*c2*m18*m40*s2**3 - 30*c2*m19**4*s2**6 - 2400*c2*m19**2*m2*s2**9 + 2400*c2*m19*m2*m20*s2**7 + 1200*c2*m19*m2*s2**2 + 1000*c2*m19*m39*s2**3 + 4000*c2*m2*m35*s2**3 + 40000*c2*m42*s2**6 - 10000*c2*m43*s2**4 - 30000*m12*m18*s2**8 + 20000*m12*m19*s2**6 - 5000*m12*m20*s2**4 + 8*m18**3*m19*m2*s2**5 + 40*m18**3*m2*m29*s2**3 - 40*m18**3*m2*m30*s2 - 360*m18**2*m19*m2*m20*s2**8 - 120*m18**2*m19*m2*m29*s2 - 120*m18**2*m19*m2*s2**3 - 40*m18**2*m2**2*s2**6 + 180*m18**2*m2*m20**2*s2**6 + 120*m18**2*m2*m20*s2 - 400*m18**2*m2*m35*s2**4 + 200*m18**2*m2*m36*s2**2 - 120*m18*m19**3*m2*s2**8 + 360*m18*m19**2*m2*m20*s2**6 + 120*m18*m19**2*m2*s2 - 1200*m18*m19*m2**2*s2**11 + 400*m18*m19*m2*m35*s2**2 + 2400*m18*m2**2*m20*s2**9 + 600*m18*m2**2*m29*s2**2 + 1200*m18*m2**2*s2**4 + 3000*m18*m2*m39*s2**5 - 1000*m18*m2*m40*s2**3 + 30*m19**4*m2*s2**6 + 1200*m19**2*m2**2*s2**9 - 1200*m19*m2**2*m20*s2**7 - 600*m19*m2**2*s2**2 - 1000*m19*m2*m39*s2**3 - 2000*m2**2*m35*s2**3 - 40000*m2*m42*s2**6 + 10000*m2*m43*s2**4
m61 = -600*c2**2*m18**2*s2**11 + 2400*c2**2*m18*m19*s2**9 - 1200*c2**2*m18*m20*s2**7 - 600*c2**2*m18*s2**2 - 600*c2**2*m19**2*s2**7 - 2*c2*m18**4*s2**5 + 120*c2*m18**3*m20*s2**8 + 40*c2*m18**3*m29*s2 + 40*c2*m18**3*s2**3 + 180*c2*m18**2*m19**2*s2**8 - 360*c2*m18**2*m19*m20*s2**6 - 120*c2*m18**2*m19*s2 + 1200*c2*m18**2*m2*s2**11 - 200*c2*m18**2*m35*s2**2 - 120*c2*m18*m19**3*s2**6 - 4800*c2*m18*m19*m2*s2**9 + 2400*c2*m18*m2*m20*s2**7 + 1200*c2*m18*m2*s2**2 + 1000*c2*m18*m39*s2**3 + 1200*c2*m19**2*m2*s2**7 - 10000*c2*m42*s2**4 + 20000*m12*m18*s2**6 - 5000*m12*m19*s2**4 + 2*m18**4*m2*s2**5 - 120*m18**3*m2*m20*s2**8 - 40*m18**3*m2*m29*s2 - 40*m18**3*m2*s2**3 - 180*m18**2*m19**2*m2*s2**8 + 360*m18**2*m19*m2*m20*s2**6 + 120*m18**2*m19*m2*s2 - 600*m18**2*m2**2*s2**11 + 200*m18**2*m2*m35*s2**2 + 120*m18*m19**3*m2*s2**6 + 2400*m18*m19*m2**2*s2**9 - 1200*m18*m2**2*m20*s2**7 - 600*m18*m2**2*s2**2 - 1000*m18*m2*m39*s2**3 - 600*m19**2*m2**2*s2**7 + 10000*m2*m42*s2**4
m60 = 1200*c2**2*m18**2*s2**9 - 1200*c2**2*m18*m19*s2**7 + 120*c2*m18**3*m19*s2**8 - 120*c2*m18**3*m20*s2**6 - 40*c2*m18**3*s2 - 180*c2*m18**2*m19**2*s2**6 - 2400*c2*m18**2*m2*s2**9 + 2400*c2*m18*m19*m2*s2**7 - 5000*m12*m18*s2**4 - 120*m18**3*m19*m2*s2**8 + 120*m18**3*m2*m20*s2**6 + 40*m18**3*m2*s2 + 180*m18**2*m19**2*m2*s2**6 + 1200*m18**2*m2**2*s2**9 - 1200*m18*m19*m2**2*s2**7
m59 = -600*c2**2*m18**2*s2**7 + 30*c2*m18**4*s2**8 - 120*c2*m18**3*m19*s2**6 + 1200*c2*m18**2*m2*s2**7 - 30*m18**4*m2*s2**8 + 120*m18**3*m19*m2*s2**6 - 600*m18**2*m2**2*s2**7
m58 = -30*c2*m18**4*s2**6 + 30*m18**4*m2*s2**6
m58, m59, m60, m61, m62, m63, m64, m65, m66, m67, m68, m69, m70 = sympy.symbols('m58, m59, m60, m61, m62, m63, m64, m65, m66, m67, m68, m69, m70')
m16 = m58*s3**16 + m59*s3**15 + m60*s3**14 + m61*s3**13 + m62*s3**12 + m63*s3**11 + m64*s3**10 + m65*s3**9 + m66*s3**8 + m67*s3**7 + m68*s3**6 + m69*s3**5 + m70*s3**4

m79 = 200*c2*m20*m38*s2**6 - 200*m2*m20*m38*s2**6
m78 = 200*c2*m19*m38*s2**6 + 8*c2*m20**3*s2**5 + 40*c2*m20**2*m30*s2**3 + 200*c2*m20*m37*s2**6 - 400*c2*m20*m38*s2**4 - 200*m19*m2*m38*s2**6 - 8*m2*m20**3*s2**5 - 40*m2*m20**2*m30*s2**3 - 200*m2*m20*m37*s2**6 + 400*m2*m20*m38*s2**4
m77 = 200*c2*m18*m38*s2**6 + 24*c2*m19*m20**2*s2**5 + 80*c2*m19*m20*m30*s2**3 + 200*c2*m19*m37*s2**6 - 400*c2*m19*m38*s2**4 + 40*c2*m20**2*m29*s2**3 - 40*c2*m20**2*m30*s2 + 200*c2*m20*m36*s2**6 - 400*c2*m20*m37*s2**4 + 200*c2*m20*m38*s2**2 + 1000*c2*m41*s2**9 - 200*m18*m2*m38*s2**6 - 24*m19*m2*m20**2*s2**5 - 80*m19*m2*m20*m30*s2**3 - 200*m19*m2*m37*s2**6 + 400*m19*m2*m38*s2**4 - 40*m2*m20**2*m29*s2**3 + 40*m2*m20**2*m30*s2 - 200*m2*m20*m36*s2**6 + 400*m2*m20*m37*s2**4 - 200*m2*m20*m38*s2**2 - 1000*m2*m41*s2**9
m76 = -80*c2**2*m20*s2**8 - 200*c2**2*m30*s2**6 + 24*c2*m18*m20**2*s2**5 + 80*c2*m18*m20*m30*s2**3 + 200*c2*m18*m37*s2**6 - 400*c2*m18*m38*s2**4 + 24*c2*m19**2*m20*s2**5 + 40*c2*m19**2*m30*s2**3 + 80*c2*m19*m20*m29*s2**3 - 80*c2*m19*m20*m30*s2 + 200*c2*m19*m36*s2**6 - 400*c2*m19*m37*s2**4 + 200*c2*m19*m38*s2**2 + 160*c2*m2*m20*s2**8 + 400*c2*m2*m30*s2**6 - 40*c2*m20**2*m29*s2 - 40*c2*m20**2*s2**3 + 200*c2*m20*m35*s2**6 - 400*c2*m20*m36*s2**4 + 200*c2*m20*m37*s2**2 + 1000*c2*m40*s2**9 - 3000*c2*m41*s2**7 - 24*m18*m2*m20**2*s2**5 - 80*m18*m2*m20*m30*s2**3 - 200*m18*m2*m37*s2**6 + 400*m18*m2*m38*s2**4 - 24*m19**2*m2*m20*s2**5 - 40*m19**2*m2*m30*s2**3 - 80*m19*m2*m20*m29*s2**3 + 80*m19*m2*m20*m30*s2 - 200*m19*m2*m36*s2**6 + 400*m19*m2*m37*s2**4 - 200*m19*m2*m38*s2**2 - 80*m2**2*m20*s2**8 - 200*m2**2*m30*s2**6 + 40*m2*m20**2*m29*s2 + 40*m2*m20**2*s2**3 - 200*m2*m20*m35*s2**6 + 400*m2*m20*m36*s2**4 - 200*m2*m20*m37*s2**2 - 1000*m2*m40*s2**9 + 3000*m2*m41*s2**7
m75 = -80*c2**2*m19*s2**8 + 80*c2**2*m20*s2**6 - 200*c2**2*m29*s2**6 + 400*c2**2*m30*s2**4 + 48*c2*m18*m19*m20*s2**5 + 80*c2*m18*m19*m30*s2**3 + 80*c2*m18*m20*m29*s2**3 - 80*c2*m18*m20*m30*s2 + 200*c2*m18*m36*s2**6 - 400*c2*m18*m37*s2**4 + 200*c2*m18*m38*s2**2 + 8*c2*m19**3*s2**5 + 40*c2*m19**2*m29*s2**3 - 40*c2*m19**2*m30*s2 + 160*c2*m19*m2*s2**8 - 80*c2*m19*m20*m29*s2 - 80*c2*m19*m20*s2**3 + 200*c2*m19*m35*s2**6 - 400*c2*m19*m36*s2**4 + 200*c2*m19*m37*s2**2 - 160*c2*m2*m20*s2**6 + 400*c2*m2*m29*s2**6 - 800*c2*m2*m30*s2**4 + 40*c2*m20**2*s2 - 400*c2*m20*m35*s2**4 + 200*c2*m20*m36*s2**2 + 1000*c2*m39*s2**9 - 3000*c2*m40*s2**7 + 3000*c2*m41*s2**5 - 5000*m12*s2**12 - 48*m18*m19*m2*m20*s2**5 - 80*m18*m19*m2*m30*s2**3 - 80*m18*m2*m20*m29*s2**3 + 80*m18*m2*m20*m30*s2 - 200*m18*m2*m36*s2**6 + 400*m18*m2*m37*s2**4 - 200*m18*m2*m38*s2**2 - 8*m19**3*m2*s2**5 - 40*m19**2*m2*m29*s2**3 + 40*m19**2*m2*m30*s2 - 80*m19*m2**2*s2**8 + 80*m19*m2*m20*m29*s2 + 80*m19*m2*m20*s2**3 - 200*m19*m2*m35*s2**6 + 400*m19*m2*m36*s2**4 - 200*m19*m2*m37*s2**2 + 80*m2**2*m20*s2**6 - 200*m2**2*m29*s2**6 + 400*m2**2*m30*s2**4 - 40*m2*m20**2*s2 + 400*m2*m20*m35*s2**4 - 200*m2*m20*m36*s2**2 - 1000*m2*m39*s2**9 + 3000*m2*m40*s2**7 - 3000*m2*m41*s2**5
m74 = -80*c2**2*m18*s2**8 + 80*c2**2*m19*s2**6 + 400*c2**2*m29*s2**4 - 200*c2**2*m30*s2**2 + 200*c2**2*s2**6 + 24*c2*m18**2*m20*s2**5 + 40*c2*m18**2*m30*s2**3 + 24*c2*m18*m19**2*s2**5 + 80*c2*m18*m19*m29*s2**3 - 80*c2*m18*m19*m30*s2 + 160*c2*m18*m2*s2**8 - 80*c2*m18*m20*m29*s2 - 80*c2*m18*m20*s2**3 + 200*c2*m18*m35*s2**6 - 400*c2*m18*m36*s2**4 + 200*c2*m18*m37*s2**2 - 40*c2*m19**2*m29*s2 - 40*c2*m19**2*s2**3 - 160*c2*m19*m2*s2**6 + 80*c2*m19*m20*s2 - 400*c2*m19*m35*s2**4 + 200*c2*m19*m36*s2**2 - 800*c2*m2*m29*s2**4 + 400*c2*m2*m30*s2**2 - 400*c2*m2*s2**6 + 200*c2*m20*m35*s2**2 - 3000*c2*m39*s2**7 + 3000*c2*m40*s2**5 - 1000*c2*m41*s2**3 + 20000*m12*s2**10 - 24*m18**2*m2*m20*s2**5 - 40*m18**2*m2*m30*s2**3 - 24*m18*m19**2*m2*s2**5 - 80*m18*m19*m2*m29*s2**3 + 80*m18*m19*m2*m30*s2 - 80*m18*m2**2*s2**8 + 80*m18*m2*m20*m29*s2 + 80*m18*m2*m20*s2**3 - 200*m18*m2*m35*s2**6 + 400*m18*m2*m36*s2**4 - 200*m18*m2*m37*s2**2 + 40*m19**2*m2*m29*s2 + 40*m19**2*m2*s2**3 + 80*m19*m2**2*s2**6 - 80*m19*m2*m20*s2 + 400*m19*m2*m35*s2**4 - 200*m19*m2*m36*s2**2 + 400*m2**2*m29*s2**4 - 200*m2**2*m30*s2**2 + 200*m2**2*s2**6 - 200*m2*m20*m35*s2**2 + 3000*m2*m39*s2**7 - 3000*m2*m40*s2**5 + 1000*m2*m41*s2**3
m73 = 80*c2**2*m18*s2**6 - 200*c2**2*m29*s2**2 - 400*c2**2*s2**4 + 24*c2*m18**2*m19*s2**5 + 40*c2*m18**2*m29*s2**3 - 40*c2*m18**2*m30*s2 - 80*c2*m18*m19*m29*s2 - 80*c2*m18*m19*s2**3 - 160*c2*m18*m2*s2**6 + 80*c2*m18*m20*s2 - 400*c2*m18*m35*s2**4 + 200*c2*m18*m36*s2**2 + 40*c2*m19**2*s2 + 200*c2*m19*m35*s2**2 + 400*c2*m2*m29*s2**2 + 800*c2*m2*s2**4 + 3000*c2*m39*s2**5 - 1000*c2*m40*s2**3 - 30000*m12*s2**8 - 24*m18**2*m19*m2*s2**5 - 40*m18**2*m2*m29*s2**3 + 40*m18**2*m2*m30*s2 + 80*m18*m19*m2*m29*s2 + 80*m18*m19*m2*s2**3 + 80*m18*m2**2*s2**6 - 80*m18*m2*m20*s2 + 400*m18*m2*m35*s2**4 - 200*m18*m2*m36*s2**2 - 40*m19**2*m2*s2 - 200*m19*m2*m35*s2**2 - 200*m2**2*m29*s2**2 - 400*m2**2*s2**4 - 3000*m2*m39*s2**5 + 1000*m2*m40*s2**3
m72 = 200*c2**2*s2**2 + 8*c2*m18**3*s2**5 - 40*c2*m18**2*m29*s2 - 40*c2*m18**2*s2**3 + 80*c2*m18*m19*s2 + 200*c2*m18*m35*s2**2 - 400*c2*m2*s2**2 - 1000*c2*m39*s2**3 + 20000*m12*s2**6 - 8*m18**3*m2*s2**5 + 40*m18**2*m2*m29*s2 + 40*m18**2*m2*s2**3 - 80*m18*m19*m2*s2 - 200*m18*m2*m35*s2**2 + 200*m2**2*s2**2 + 1000*m2*m39*s2**3
m71 = 40*c2*m18**2*s2 - 5000*m12*s2**4 - 40*m18**2*m2*s2
m71, m72, m73, m74, m75, m76, m77, m78, m79 = sympy.symbols("m71, m72, m73, m74, m75, m76, m77, m78, m79")
m17 = m71*s3**12 + m72*s3**11 + m73*s3**10 + m74*s3**9 + m75*s3**8 + m76*s3**7 + m77*s3**6 + m78*s3**5 + m79*s3**4


m94 = -m20**2*m57**2 + m51**2
m93 = -2*m19*m20*m57**2 - 2*m20**2*m56*m57 + 2*m50*m51
m92 = 20*c2*m57**2*s2**3 - 2*m18*m20*m57**2 - m19**2*m57**2 - 4*m19*m20*m56*m57 - 20*m2*m57**2*s2**3 - 2*m20**2*m55*m57 - m20**2*m56**2 + 2*m49*m51 + m50**2
m91 = 40*c2*m56*m57*s2**3 - 20*c2*m57**2*s2 - 2*m18*m19*m57**2 - 4*m18*m20*m56*m57 - 2*m19**2*m56*m57 - 4*m19*m20*m55*m57 - 2*m19*m20*m56**2 - 40*m2*m56*m57*s2**3 + 20*m2*m57**2*s2 - 2*m20**2*m54*m57 - 2*m20**2*m55*m56 + 2*m48*m51 + 2*m49*m50
m90 = 40*c2*m55*m57*s2**3 + 20*c2*m56**2*s2**3 - 40*c2*m56*m57*s2 - m18**2*m57**2 - 4*m18*m19*m56*m57 - 4*m18*m20*m55*m57 - 2*m18*m20*m56**2 - 2*m19**2*m55*m57 - m19**2*m56**2 - 4*m19*m20*m54*m57 - 4*m19*m20*m55*m56 - 40*m2*m55*m57*s2**3 - 20*m2*m56**2*s2**3 + 40*m2*m56*m57*s2 - 2*m20**2*m53*m57 - 2*m20**2*m54*m56 - m20**2*m55**2 + 2*m47*m51 + 2*m48*m50 + m49**2
m89 = 40*c2*m54*m57*s2**3 + 40*c2*m55*m56*s2**3 - 40*c2*m55*m57*s2 - 20*c2*m56**2*s2 - 2*m18**2*m56*m57 - 4*m18*m19*m55*m57 - 2*m18*m19*m56**2 - 4*m18*m20*m54*m57 - 4*m18*m20*m55*m56 - 2*m19**2*m54*m57 - 2*m19**2*m55*m56 - 4*m19*m20*m53*m57 - 4*m19*m20*m54*m56 - 2*m19*m20*m55**2 - 40*m2*m54*m57*s2**3 - 40*m2*m55*m56*s2**3 + 40*m2*m55*m57*s2 + 20*m2*m56**2*s2 - 2*m20**2*m52*m57 - 2*m20**2*m53*m56 - 2*m20**2*m54*m55 + 2*m46*m51 + 2*m47*m50 + 2*m48*m49
m88 = 40*c2*m53*m57*s2**3 + 40*c2*m54*m56*s2**3 - 40*c2*m54*m57*s2 + 20*c2*m55**2*s2**3 - 40*c2*m55*m56*s2 - 2*m18**2*m55*m57 - m18**2*m56**2 - 4*m18*m19*m54*m57 - 4*m18*m19*m55*m56 - 4*m18*m20*m53*m57 - 4*m18*m20*m54*m56 - 2*m18*m20*m55**2 - 2*m19**2*m53*m57 - 2*m19**2*m54*m56 - m19**2*m55**2 - 4*m19*m20*m52*m57 - 4*m19*m20*m53*m56 - 4*m19*m20*m54*m55 - 40*m2*m53*m57*s2**3 - 40*m2*m54*m56*s2**3 + 40*m2*m54*m57*s2 - 20*m2*m55**2*s2**3 + 40*m2*m55*m56*s2 - 2*m20**2*m52*m56 - 2*m20**2*m53*m55 - m20**2*m54**2 + 2*m45*m51 + 2*m46*m50 + 2*m47*m49 + m48**2
m87 = 40*c2*m52*m57*s2**3 + 40*c2*m53*m56*s2**3 - 40*c2*m53*m57*s2 + 40*c2*m54*m55*s2**3 - 40*c2*m54*m56*s2 - 20*c2*m55**2*s2 - 2*m18**2*m54*m57 - 2*m18**2*m55*m56 - 4*m18*m19*m53*m57 - 4*m18*m19*m54*m56 - 2*m18*m19*m55**2 - 4*m18*m20*m52*m57 - 4*m18*m20*m53*m56 - 4*m18*m20*m54*m55 - 2*m19**2*m52*m57 - 2*m19**2*m53*m56 - 2*m19**2*m54*m55 - 4*m19*m20*m52*m56 - 4*m19*m20*m53*m55 - 2*m19*m20*m54**2 - 40*m2*m52*m57*s2**3 - 40*m2*m53*m56*s2**3 + 40*m2*m53*m57*s2 - 40*m2*m54*m55*s2**3 + 40*m2*m54*m56*s2 + 20*m2*m55**2*s2 - 2*m20**2*m52*m55 - 2*m20**2*m53*m54 + 2*m44*m51 + 2*m45*m50 + 2*m46*m49 + 2*m47*m48
m86 = 40*c2*m52*m56*s2**3 - 40*c2*m52*m57*s2 + 40*c2*m53*m55*s2**3 - 40*c2*m53*m56*s2 + 20*c2*m54**2*s2**3 - 40*c2*m54*m55*s2 - 2*m18**2*m53*m57 - 2*m18**2*m54*m56 - m18**2*m55**2 - 4*m18*m19*m52*m57 - 4*m18*m19*m53*m56 - 4*m18*m19*m54*m55 - 4*m18*m20*m52*m56 - 4*m18*m20*m53*m55 - 2*m18*m20*m54**2 - 2*m19**2*m52*m56 - 2*m19**2*m53*m55 - m19**2*m54**2 - 4*m19*m20*m52*m55 - 4*m19*m20*m53*m54 - 40*m2*m52*m56*s2**3 + 40*m2*m52*m57*s2 - 40*m2*m53*m55*s2**3 + 40*m2*m53*m56*s2 - 20*m2*m54**2*s2**3 + 40*m2*m54*m55*s2 - 2*m20**2*m52*m54 - m20**2*m53**2 + 2*m44*m50 + 2*m45*m49 + 2*m46*m48 + m47**2
m85 = 40*c2*m52*m55*s2**3 - 40*c2*m52*m56*s2 + 40*c2*m53*m54*s2**3 - 40*c2*m53*m55*s2 - 20*c2*m54**2*s2 - 2*m18**2*m52*m57 - 2*m18**2*m53*m56 - 2*m18**2*m54*m55 - 4*m18*m19*m52*m56 - 4*m18*m19*m53*m55 - 2*m18*m19*m54**2 - 4*m18*m20*m52*m55 - 4*m18*m20*m53*m54 - 2*m19**2*m52*m55 - 2*m19**2*m53*m54 - 4*m19*m20*m52*m54 - 2*m19*m20*m53**2 - 40*m2*m52*m55*s2**3 + 40*m2*m52*m56*s2 - 40*m2*m53*m54*s2**3 + 40*m2*m53*m55*s2 + 20*m2*m54**2*s2 - 2*m20**2*m52*m53 + 2*m44*m49 + 2*m45*m48 + 2*m46*m47
m84 = 40*c2*m52*m54*s2**3 - 40*c2*m52*m55*s2 + 20*c2*m53**2*s2**3 - 40*c2*m53*m54*s2 - 2*m18**2*m52*m56 - 2*m18**2*m53*m55 - m18**2*m54**2 - 4*m18*m19*m52*m55 - 4*m18*m19*m53*m54 - 4*m18*m20*m52*m54 - 2*m18*m20*m53**2 - 2*m19**2*m52*m54 - m19**2*m53**2 - 4*m19*m20*m52*m53 - 40*m2*m52*m54*s2**3 + 40*m2*m52*m55*s2 - 20*m2*m53**2*s2**3 + 40*m2*m53*m54*s2 - m20**2*m52**2 + 2*m44*m48 + 2*m45*m47 + m46**2
m83 = 40*c2*m52*m53*s2**3 - 40*c2*m52*m54*s2 - 20*c2*m53**2*s2 - 2*m18**2*m52*m55 - 2*m18**2*m53*m54 - 4*m18*m19*m52*m54 - 2*m18*m19*m53**2 - 4*m18*m20*m52*m53 - 2*m19**2*m52*m53 - 2*m19*m20*m52**2 - 40*m2*m52*m53*s2**3 + 40*m2*m52*m54*s2 + 20*m2*m53**2*s2 + 2*m44*m47 + 2*m45*m46
m82 = 20*c2*m52**2*s2**3 - 40*c2*m52*m53*s2 - 2*m18**2*m52*m54 - m18**2*m53**2 - 4*m18*m19*m52*m53 - 2*m18*m20*m52**2 - m19**2*m52**2 - 20*m2*m52**2*s2**3 + 40*m2*m52*m53*s2 + 2*m44*m46 + m45**2
m81 = -20*c2*m52**2*s2 - 2*m18**2*m52*m53 - 2*m18*m19*m52**2 + 20*m2*m52**2*s2 + 2*m44*m45
m80 = -m18**2*m52**2 + m44**2
Zero1 = m80*s3**20 + m81*s3**19 + m82*s3**18 + m83*s3**17 + m84*s3**16 + m85*s3**15 + m86*s3**14 + m87*s3**13 + m88*s3**12 + m89*s3**11 + m90*s3**10 + m91*s3**9 + m92*s3**8 + m93*s3**7 + m94*s3**6



m119 = -m20**2*m79**2 + m70**2
m118 = -2*m19*m20*m79**2 - 2*m20**2*m78*m79 + 2*m69*m70
m117 = 20*c2*m79**2*s2**3 - 2*m18*m20*m79**2 - m19**2*m79**2 - 4*m19*m20*m78*m79 - 20*m2*m79**2*s2**3 - 2*m20**2*m77*m79 - m20**2*m78**2 + 2*m68*m70 + m69**2
m116 = 40*c2*m78*m79*s2**3 - 20*c2*m79**2*s2 - 2*m18*m19*m79**2 - 4*m18*m20*m78*m79 - 2*m19**2*m78*m79 - 4*m19*m20*m77*m79 - 2*m19*m20*m78**2 - 40*m2*m78*m79*s2**3 + 20*m2*m79**2*s2 - 2*m20**2*m76*m79 - 2*m20**2*m77*m78 + 2*m67*m70 + 2*m68*m69
m115 = 40*c2*m77*m79*s2**3 + 20*c2*m78**2*s2**3 - 40*c2*m78*m79*s2 - m18**2*m79**2 - 4*m18*m19*m78*m79 - 4*m18*m20*m77*m79 - 2*m18*m20*m78**2 - 2*m19**2*m77*m79 - m19**2*m78**2 - 4*m19*m20*m76*m79 - 4*m19*m20*m77*m78 - 40*m2*m77*m79*s2**3 - 20*m2*m78**2*s2**3 + 40*m2*m78*m79*s2 - 2*m20**2*m75*m79 - 2*m20**2*m76*m78 - m20**2*m77**2 + 2*m66*m70 + 2*m67*m69 + m68**2
m114 = 40*c2*m76*m79*s2**3 + 40*c2*m77*m78*s2**3 - 40*c2*m77*m79*s2 - 20*c2*m78**2*s2 - 2*m18**2*m78*m79 - 4*m18*m19*m77*m79 - 2*m18*m19*m78**2 - 4*m18*m20*m76*m79 - 4*m18*m20*m77*m78 - 2*m19**2*m76*m79 - 2*m19**2*m77*m78 - 4*m19*m20*m75*m79 - 4*m19*m20*m76*m78 - 2*m19*m20*m77**2 - 40*m2*m76*m79*s2**3 - 40*m2*m77*m78*s2**3 + 40*m2*m77*m79*s2 + 20*m2*m78**2*s2 - 2*m20**2*m74*m79 - 2*m20**2*m75*m78 - 2*m20**2*m76*m77 + 2*m65*m70 + 2*m66*m69 + 2*m67*m68
m113 = 40*c2*m75*m79*s2**3 + 40*c2*m76*m78*s2**3 - 40*c2*m76*m79*s2 + 20*c2*m77**2*s2**3 - 40*c2*m77*m78*s2 - 2*m18**2*m77*m79 - m18**2*m78**2 - 4*m18*m19*m76*m79 - 4*m18*m19*m77*m78 - 4*m18*m20*m75*m79 - 4*m18*m20*m76*m78 - 2*m18*m20*m77**2 - 2*m19**2*m75*m79 - 2*m19**2*m76*m78 - m19**2*m77**2 - 4*m19*m20*m74*m79 - 4*m19*m20*m75*m78 - 4*m19*m20*m76*m77 - 40*m2*m75*m79*s2**3 - 40*m2*m76*m78*s2**3 + 40*m2*m76*m79*s2 - 20*m2*m77**2*s2**3 + 40*m2*m77*m78*s2 - 2*m20**2*m73*m79 - 2*m20**2*m74*m78 - 2*m20**2*m75*m77 - m20**2*m76**2 + 2*m64*m70 + 2*m65*m69 + 2*m66*m68 + m67**2
m112 = 40*c2*m74*m79*s2**3 + 40*c2*m75*m78*s2**3 - 40*c2*m75*m79*s2 + 40*c2*m76*m77*s2**3 - 40*c2*m76*m78*s2 - 20*c2*m77**2*s2 - 2*m18**2*m76*m79 - 2*m18**2*m77*m78 - 4*m18*m19*m75*m79 - 4*m18*m19*m76*m78 - 2*m18*m19*m77**2 - 4*m18*m20*m74*m79 - 4*m18*m20*m75*m78 - 4*m18*m20*m76*m77 - 2*m19**2*m74*m79 - 2*m19**2*m75*m78 - 2*m19**2*m76*m77 - 4*m19*m20*m73*m79 - 4*m19*m20*m74*m78 - 4*m19*m20*m75*m77 - 2*m19*m20*m76**2 - 40*m2*m74*m79*s2**3 - 40*m2*m75*m78*s2**3 + 40*m2*m75*m79*s2 - 40*m2*m76*m77*s2**3 + 40*m2*m76*m78*s2 + 20*m2*m77**2*s2 - 2*m20**2*m72*m79 - 2*m20**2*m73*m78 - 2*m20**2*m74*m77 - 2*m20**2*m75*m76 + 2*m63*m70 + 2*m64*m69 + 2*m65*m68 + 2*m66*m67
m111 = 40*c2*m73*m79*s2**3 + 40*c2*m74*m78*s2**3 - 40*c2*m74*m79*s2 + 40*c2*m75*m77*s2**3 - 40*c2*m75*m78*s2 + 20*c2*m76**2*s2**3 - 40*c2*m76*m77*s2 - 2*m18**2*m75*m79 - 2*m18**2*m76*m78 - m18**2*m77**2 - 4*m18*m19*m74*m79 - 4*m18*m19*m75*m78 - 4*m18*m19*m76*m77 - 4*m18*m20*m73*m79 - 4*m18*m20*m74*m78 - 4*m18*m20*m75*m77 - 2*m18*m20*m76**2 - 2*m19**2*m73*m79 - 2*m19**2*m74*m78 - 2*m19**2*m75*m77 - m19**2*m76**2 - 4*m19*m20*m72*m79 - 4*m19*m20*m73*m78 - 4*m19*m20*m74*m77 - 4*m19*m20*m75*m76 - 40*m2*m73*m79*s2**3 - 40*m2*m74*m78*s2**3 + 40*m2*m74*m79*s2 - 40*m2*m75*m77*s2**3 + 40*m2*m75*m78*s2 - 20*m2*m76**2*s2**3 + 40*m2*m76*m77*s2 - 2*m20**2*m71*m79 - 2*m20**2*m72*m78 - 2*m20**2*m73*m77 - 2*m20**2*m74*m76 - m20**2*m75**2 + 2*m62*m70 + 2*m63*m69 + 2*m64*m68 + 2*m65*m67 + m66**2
m110 = 40*c2*m72*m79*s2**3 + 40*c2*m73*m78*s2**3 - 40*c2*m73*m79*s2 + 40*c2*m74*m77*s2**3 - 40*c2*m74*m78*s2 + 40*c2*m75*m76*s2**3 - 40*c2*m75*m77*s2 - 20*c2*m76**2*s2 - 2*m18**2*m74*m79 - 2*m18**2*m75*m78 - 2*m18**2*m76*m77 - 4*m18*m19*m73*m79 - 4*m18*m19*m74*m78 - 4*m18*m19*m75*m77 - 2*m18*m19*m76**2 - 4*m18*m20*m72*m79 - 4*m18*m20*m73*m78 - 4*m18*m20*m74*m77 - 4*m18*m20*m75*m76 - 2*m19**2*m72*m79 - 2*m19**2*m73*m78 - 2*m19**2*m74*m77 - 2*m19**2*m75*m76 - 4*m19*m20*m71*m79 - 4*m19*m20*m72*m78 - 4*m19*m20*m73*m77 - 4*m19*m20*m74*m76 - 2*m19*m20*m75**2 - 40*m2*m72*m79*s2**3 - 40*m2*m73*m78*s2**3 + 40*m2*m73*m79*s2 - 40*m2*m74*m77*s2**3 + 40*m2*m74*m78*s2 - 40*m2*m75*m76*s2**3 + 40*m2*m75*m77*s2 + 20*m2*m76**2*s2 - 2*m20**2*m71*m78 - 2*m20**2*m72*m77 - 2*m20**2*m73*m76 - 2*m20**2*m74*m75 + 2*m61*m70 + 2*m62*m69 + 2*m63*m68 + 2*m64*m67 + 2*m65*m66
m109 = 40*c2*m71*m79*s2**3 + 40*c2*m72*m78*s2**3 - 40*c2*m72*m79*s2 + 40*c2*m73*m77*s2**3 - 40*c2*m73*m78*s2 + 40*c2*m74*m76*s2**3 - 40*c2*m74*m77*s2 + 20*c2*m75**2*s2**3 - 40*c2*m75*m76*s2 - 2*m18**2*m73*m79 - 2*m18**2*m74*m78 - 2*m18**2*m75*m77 - m18**2*m76**2 - 4*m18*m19*m72*m79 - 4*m18*m19*m73*m78 - 4*m18*m19*m74*m77 - 4*m18*m19*m75*m76 - 4*m18*m20*m71*m79 - 4*m18*m20*m72*m78 - 4*m18*m20*m73*m77 - 4*m18*m20*m74*m76 - 2*m18*m20*m75**2 - 2*m19**2*m71*m79 - 2*m19**2*m72*m78 - 2*m19**2*m73*m77 - 2*m19**2*m74*m76 - m19**2*m75**2 - 4*m19*m20*m71*m78 - 4*m19*m20*m72*m77 - 4*m19*m20*m73*m76 - 4*m19*m20*m74*m75 - 40*m2*m71*m79*s2**3 - 40*m2*m72*m78*s2**3 + 40*m2*m72*m79*s2 - 40*m2*m73*m77*s2**3 + 40*m2*m73*m78*s2 - 40*m2*m74*m76*s2**3 + 40*m2*m74*m77*s2 - 20*m2*m75**2*s2**3 + 40*m2*m75*m76*s2 - 2*m20**2*m71*m77 - 2*m20**2*m72*m76 - 2*m20**2*m73*m75 - m20**2*m74**2 + 2*m60*m70 + 2*m61*m69 + 2*m62*m68 + 2*m63*m67 + 2*m64*m66 + m65**2
m108 = 40*c2*m71*m78*s2**3 - 40*c2*m71*m79*s2 + 40*c2*m72*m77*s2**3 - 40*c2*m72*m78*s2 + 40*c2*m73*m76*s2**3 - 40*c2*m73*m77*s2 + 40*c2*m74*m75*s2**3 - 40*c2*m74*m76*s2 - 20*c2*m75**2*s2 - 2*m18**2*m72*m79 - 2*m18**2*m73*m78 - 2*m18**2*m74*m77 - 2*m18**2*m75*m76 - 4*m18*m19*m71*m79 - 4*m18*m19*m72*m78 - 4*m18*m19*m73*m77 - 4*m18*m19*m74*m76 - 2*m18*m19*m75**2 - 4*m18*m20*m71*m78 - 4*m18*m20*m72*m77 - 4*m18*m20*m73*m76 - 4*m18*m20*m74*m75 - 2*m19**2*m71*m78 - 2*m19**2*m72*m77 - 2*m19**2*m73*m76 - 2*m19**2*m74*m75 - 4*m19*m20*m71*m77 - 4*m19*m20*m72*m76 - 4*m19*m20*m73*m75 - 2*m19*m20*m74**2 - 40*m2*m71*m78*s2**3 + 40*m2*m71*m79*s2 - 40*m2*m72*m77*s2**3 + 40*m2*m72*m78*s2 - 40*m2*m73*m76*s2**3 + 40*m2*m73*m77*s2 - 40*m2*m74*m75*s2**3 + 40*m2*m74*m76*s2 + 20*m2*m75**2*s2 - 2*m20**2*m71*m76 - 2*m20**2*m72*m75 - 2*m20**2*m73*m74 + 2*m59*m70 + 2*m60*m69 + 2*m61*m68 + 2*m62*m67 + 2*m63*m66 + 2*m64*m65
m107 = 40*c2*m71*m77*s2**3 - 40*c2*m71*m78*s2 + 40*c2*m72*m76*s2**3 - 40*c2*m72*m77*s2 + 40*c2*m73*m75*s2**3 - 40*c2*m73*m76*s2 + 20*c2*m74**2*s2**3 - 40*c2*m74*m75*s2 - 2*m18**2*m71*m79 - 2*m18**2*m72*m78 - 2*m18**2*m73*m77 - 2*m18**2*m74*m76 - m18**2*m75**2 - 4*m18*m19*m71*m78 - 4*m18*m19*m72*m77 - 4*m18*m19*m73*m76 - 4*m18*m19*m74*m75 - 4*m18*m20*m71*m77 - 4*m18*m20*m72*m76 - 4*m18*m20*m73*m75 - 2*m18*m20*m74**2 - 2*m19**2*m71*m77 - 2*m19**2*m72*m76 - 2*m19**2*m73*m75 - m19**2*m74**2 - 4*m19*m20*m71*m76 - 4*m19*m20*m72*m75 - 4*m19*m20*m73*m74 - 40*m2*m71*m77*s2**3 + 40*m2*m71*m78*s2 - 40*m2*m72*m76*s2**3 + 40*m2*m72*m77*s2 - 40*m2*m73*m75*s2**3 + 40*m2*m73*m76*s2 - 20*m2*m74**2*s2**3 + 40*m2*m74*m75*s2 - 2*m20**2*m71*m75 - 2*m20**2*m72*m74 - m20**2*m73**2 + 2*m58*m70 + 2*m59*m69 + 2*m60*m68 + 2*m61*m67 + 2*m62*m66 + 2*m63*m65 + m64**2
m106 = 40*c2*m71*m76*s2**3 - 40*c2*m71*m77*s2 + 40*c2*m72*m75*s2**3 - 40*c2*m72*m76*s2 + 40*c2*m73*m74*s2**3 - 40*c2*m73*m75*s2 - 20*c2*m74**2*s2 - 2*m18**2*m71*m78 - 2*m18**2*m72*m77 - 2*m18**2*m73*m76 - 2*m18**2*m74*m75 - 4*m18*m19*m71*m77 - 4*m18*m19*m72*m76 - 4*m18*m19*m73*m75 - 2*m18*m19*m74**2 - 4*m18*m20*m71*m76 - 4*m18*m20*m72*m75 - 4*m18*m20*m73*m74 - 2*m19**2*m71*m76 - 2*m19**2*m72*m75 - 2*m19**2*m73*m74 - 4*m19*m20*m71*m75 - 4*m19*m20*m72*m74 - 2*m19*m20*m73**2 - 40*m2*m71*m76*s2**3 + 40*m2*m71*m77*s2 - 40*m2*m72*m75*s2**3 + 40*m2*m72*m76*s2 - 40*m2*m73*m74*s2**3 + 40*m2*m73*m75*s2 + 20*m2*m74**2*s2 - 2*m20**2*m71*m74 - 2*m20**2*m72*m73 + 2*m58*m69 + 2*m59*m68 + 2*m60*m67 + 2*m61*m66 + 2*m62*m65 + 2*m63*m64
m105 = 40*c2*m71*m75*s2**3 - 40*c2*m71*m76*s2 + 40*c2*m72*m74*s2**3 - 40*c2*m72*m75*s2 + 20*c2*m73**2*s2**3 - 40*c2*m73*m74*s2 - 2*m18**2*m71*m77 - 2*m18**2*m72*m76 - 2*m18**2*m73*m75 - m18**2*m74**2 - 4*m18*m19*m71*m76 - 4*m18*m19*m72*m75 - 4*m18*m19*m73*m74 - 4*m18*m20*m71*m75 - 4*m18*m20*m72*m74 - 2*m18*m20*m73**2 - 2*m19**2*m71*m75 - 2*m19**2*m72*m74 - m19**2*m73**2 - 4*m19*m20*m71*m74 - 4*m19*m20*m72*m73 - 40*m2*m71*m75*s2**3 + 40*m2*m71*m76*s2 - 40*m2*m72*m74*s2**3 + 40*m2*m72*m75*s2 - 20*m2*m73**2*s2**3 + 40*m2*m73*m74*s2 - 2*m20**2*m71*m73 - m20**2*m72**2 + 2*m58*m68 + 2*m59*m67 + 2*m60*m66 + 2*m61*m65 + 2*m62*m64 + m63**2
m104 = 40*c2*m71*m74*s2**3 - 40*c2*m71*m75*s2 + 40*c2*m72*m73*s2**3 - 40*c2*m72*m74*s2 - 20*c2*m73**2*s2 - 2*m18**2*m71*m76 - 2*m18**2*m72*m75 - 2*m18**2*m73*m74 - 4*m18*m19*m71*m75 - 4*m18*m19*m72*m74 - 2*m18*m19*m73**2 - 4*m18*m20*m71*m74 - 4*m18*m20*m72*m73 - 2*m19**2*m71*m74 - 2*m19**2*m72*m73 - 4*m19*m20*m71*m73 - 2*m19*m20*m72**2 - 40*m2*m71*m74*s2**3 + 40*m2*m71*m75*s2 - 40*m2*m72*m73*s2**3 + 40*m2*m72*m74*s2 + 20*m2*m73**2*s2 - 2*m20**2*m71*m72 + 2*m58*m67 + 2*m59*m66 + 2*m60*m65 + 2*m61*m64 + 2*m62*m63
m103 = 40*c2*m71*m73*s2**3 - 40*c2*m71*m74*s2 + 20*c2*m72**2*s2**3 - 40*c2*m72*m73*s2 - 2*m18**2*m71*m75 - 2*m18**2*m72*m74 - m18**2*m73**2 - 4*m18*m19*m71*m74 - 4*m18*m19*m72*m73 - 4*m18*m20*m71*m73 - 2*m18*m20*m72**2 - 2*m19**2*m71*m73 - m19**2*m72**2 - 4*m19*m20*m71*m72 - 40*m2*m71*m73*s2**3 + 40*m2*m71*m74*s2 - 20*m2*m72**2*s2**3 + 40*m2*m72*m73*s2 - m20**2*m71**2 + 2*m58*m66 + 2*m59*m65 + 2*m60*m64 + 2*m61*m63 + m62**2
m102 = 40*c2*m71*m72*s2**3 - 40*c2*m71*m73*s2 - 20*c2*m72**2*s2 - 2*m18**2*m71*m74 - 2*m18**2*m72*m73 - 4*m18*m19*m71*m73 - 2*m18*m19*m72**2 - 4*m18*m20*m71*m72 - 2*m19**2*m71*m72 - 2*m19*m20*m71**2 - 40*m2*m71*m72*s2**3 + 40*m2*m71*m73*s2 + 20*m2*m72**2*s2 + 2*m58*m65 + 2*m59*m64 + 2*m60*m63 + 2*m61*m62
m101 = 20*c2*m71**2*s2**3 - 40*c2*m71*m72*s2 - 2*m18**2*m71*m73 - m18**2*m72**2 - 4*m18*m19*m71*m72 - 2*m18*m20*m71**2 - m19**2*m71**2 - 20*m2*m71**2*s2**3 + 40*m2*m71*m72*s2 + 2*m58*m64 + 2*m59*m63 + 2*m60*m62 + m61**2
m100 = -20*c2*m71**2*s2 - 2*m18**2*m71*m72 - 2*m18*m19*m71**2 + 20*m2*m71**2*s2 + 2*m58*m63 + 2*m59*m62 + 2*m60*m61
m99 = -m18**2*m71**2 + 2*m58*m62 + 2*m59*m61 + m60**2
m98 = 2*m58*m61 + 2*m59*m60
m97 = 2*m58*m60 + m59**2
m96 = 2*m58*m59
m95 = m58**2
m95, m96, m97, m98, m99, m100, m101, m102, m103, m104, m105, m106, m107, m108, m109, m110, m111, m112, m113, m114, m115, m116, m117, m118, m119 = sympy.symbols('m95, m96, m97, m98, m99, m100, m101, m102, m103, m104, m105, m106, m107, m108, m109, m110, m111, m112, m113, m114, m115, m116, m117, m118, m119')
Zero2 = m95*s3**32 + m96*s3**31 + m97*s3**30 + m98*s3**29 + m99*s3**28 + m100*s3**27 + m101*s3**26 + m102*s3**25 + m103*s3**24 + m104*s3**23 + m105*s3**22 + m106*s3**21 + m107*s3**20 + m108*s3**19 + m109*s3**18 + m110*s3**17 + m111*s3**16 + m112*s3**15 + m113*s3**14 + m114*s3**13 + m115*s3**12 + m116*s3**11 + m117*s3**10 + m118*s3**9 + m119*s3**8





categorize_extensive_term(0, 32, 127, "m", sympy.expand(Zero2), s3, "Zero2", "s3")




 
